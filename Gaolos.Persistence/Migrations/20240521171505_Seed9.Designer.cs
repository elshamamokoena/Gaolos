// <auto-generated />
using System;
using Gaolos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gaolos.Persistence.Migrations
{
    [DbContext(typeof(GaolosDbContext))]
    [Migration("20240521171505_Seed9")]
    partial class Seed9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SvgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dda"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/10.jpg",
                            Name = "Haute Cuisine",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/02.jpg",
                            Name = "Noodles",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b44e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Pizza & Pasta",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Burgers & Fries",
                            SvgUrl = "img/food-delivery/icons/burger.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ae98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/08.jpeg",
                            Name = "Grills & Steak",
                            SvgUrl = "img/food-delivery/icons/steak.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/07.jpg",
                            Name = "Chicken & Wings",
                            SvgUrl = "img/food-delivery/icons/chicken.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ce98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/06.jpg",
                            Name = "Healthy food",
                            SvgUrl = "img/food-delivery/icons/healthy.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("de98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/09.jpg",
                            Name = "Fish & Seafood",
                            SvgUrl = "img/food-delivery/icons/fish.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ee98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/05.jpg",
                            Name = "Coffee & Desserts",
                            SvgUrl = "img/food-delivery/icons/coffee.svg"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Discount.Coupon", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlreadyUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            CouponId = new Guid("04667bf0-a9cd-45a8-af88-38d1ca117bff"),
                            AlreadyUsed = false,
                            Code = "BeNice",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 10m
                        },
                        new
                        {
                            CouponId = new Guid("f39e120d-99ae-4f5b-a2ec-9a59559dfe1b"),
                            AlreadyUsed = false,
                            Code = "Awesome",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 20m
                        },
                        new
                        {
                            CouponId = new Guid("edaa907a-624b-43d3-b1ca-33dec1f9709f"),
                            AlreadyUsed = false,
                            Code = "AlmostFree",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 50m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you want more for everyone",
                            Name = "Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When the craving's got you",
                            Name = " Just Hotwings",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need some soul food",
                            Name = "Soulicious",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When a sister needs some soul",
                            Name = "Soul Sister Specials",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you just can't resist",
                            Name = "Just Chicken",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When it's almost mahala",
                            Name = "Easy Bucks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're in the mood for a burger",
                            Name = "Just Chick'n Burgers",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're hungry at heart",
                            Name = "Top Deluxe",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need nuggets to feed your soul",
                            Name = "Soul Bites",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need a little snack",
                            Name = "Original Slyders",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Platters",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buckets",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Box Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Streetwise",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drnks & Treats",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharing Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wings & Snacks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Burgers & Wraps",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Add-Ons",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubmenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuId");

                    b.HasIndex("SubmenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = new Guid("7153ecf6-7dea-4627-8cca-17e9d8f517de"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal",
                            Price = 73.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("6cd9ea99-8cee-49aa-b4f0-a30e6f78b0fc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal Max",
                            Price = 76.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("0c994bac-7ada-4b5f-90d6-451fdb3341cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal",
                            Price = 86.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("0f5e83b4-d80d-49af-986f-0c445cb5bc28"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal Max",
                            Price = 90.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7a0749ae-6c29-4ba2-8e82-088367cbf342"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "6 Hotwings",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c9b4ea4f-b98a-4110-b507-66ff2b052b0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "12 Hotwings",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("9d01beaf-05e2-4624-bda7-4b230c8a2244"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "24 Hotwings",
                            Price = 168.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e6b95fc9-090c-4422-a44e-0913a764f137"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "36 Hotwings",
                            Price = 231.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("8a7468df-5fc6-44b3-b7eb-26aefc967217"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Square Meal",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("45c89624-8e4d-47ee-bd8b-378db1f6935d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Soul",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2d51b0aa-dd1e-4a06-b701-2b3639eeadc2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Straight",
                            Price = 57.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("3c505a29-fe7e-4dcd-9439-deb3e74fc209"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Combo",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d86d8dda-0c56-4f62-9975-ce9c0106a458"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/15_hotwings-circle6ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Deluxe",
                            Price = 67.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("0ccca0ff-dba5-4701-af37-de5f5513bbfa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/16_hotwings-circle6ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Max",
                            Price = 69.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("42783a5b-62f5-4566-9e05-0676fd256432"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/18_feed-my-craving-circle10ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Feed My Craving",
                            Price = 79.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ea4e0c82-d9c6-4011-9f80-e4ce41e5fb39"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/22_soulman-load-up.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soulman Load Up",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("92c96a2d-4c0c-4ddc-aa18-dfde947987a8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/21_rock-my-soul-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul",
                            Price = 105.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c4ff1f84-478d-480b-ac61-aecaba05f0bb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/17_hotwings-party-circle16ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Party",
                            Price = 132.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("768ea961-dff0-4587-9930-e1839f684fa2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/24_family-full-house-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 143.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("df791554-001e-44be-904d-3a7915815df7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/23_soul-mates-classic-party.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Mates Classic Party",
                            Price = 145.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5cc685dc-bb73-4222-bdca-d62f1db50a39"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/25_family-full-house-circle8ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 173.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("251c409f-b0a1-4d28-81b0-ff2990a3cebd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/129_soulsister-2-vibe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Vibe",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1fc5d2ea-c2f5-4309-8fcb-ccc8170bada8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/49_soulsister-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister",
                            Price = 43.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b2f9a00b-0079-4c7f-bae5-4d0bad8206cc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/50_soulsister-circle2ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Deluxe",
                            Price = 62.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("83fe2a4c-a541-4230-bed4-3d5b03e4cfcb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/51_soulsister-circle2ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Max",
                            Price = 65.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("07d7526b-298d-45ad-8d34-282e7d698a12"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/52_soulsister-party-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c288f671-bee1-4b8a-83be-a2cb64f0a667"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/53_soulsister-party-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 112.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1726b872-cdb0-48ca-bc89-5e4b1fc8e973"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/54_just-circle1ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 1",
                            Price = 20.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d492c1ce-f184-47fc-bd5f-5f0c42caebfe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/55_just-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 2",
                            Price = 39.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a9d8887b-604f-4967-b4c8-9abe7bf64b02"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/56_just-circle3ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 3",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("02042aff-c652-4ce9-a199-cf8a481ea89f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/57_just-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 4",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("be41b819-15b3-49a1-8ccc-fcd7a6403792"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/58_just-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 5",
                            Price = 99.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c495d905-8e74-45c7-b180-f35e800c2e88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/59_just-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 6",
                            Price = 120.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("75a6ed5c-fbc4-4725-b8fb-1d28700dcb56"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/60_chicken-inn-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Chicken Inn",
                            Price = 150.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d52658da-0dbf-464b-a408-6dec1783ff16"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/61_family-bucket-circle15ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Bucket",
                            Price = 230.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a9be7543-ae83-4b68-ac71-52003cfd6466"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/62_family-barrel-circle21ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Barrel",
                            Price = 300.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a666c5ba-2571-4356-bb28-f2fe73e7abd2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/44_slyder-snack-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Slyder Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("12a2089a-b87e-4474-a6d3-aaaa6f0bca58"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/45_popcorn-chicken-shaker.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Popcorn Chicken Shaker",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("48c97081-6e37-4ae2-b0b0-ce8950cf9aba"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/46_hotwings-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Hotwings Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1605f76b-b1ec-4d85-9b84-f1f8797a6de7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/47_soul-mix-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Mix Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d5d532c1-ae00-468f-a20b-1579e1d48617"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/125_soulbites-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Bites Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("50f7f7ae-9322-4b0b-bc57-a5f17008e93e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/7_love-me-tender-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("60ec3dba-8b84-4575-b719-6273581713a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/10_love-me-hot-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("29d3eb89-3895-48da-87c2-15b715054f2c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/9_love-me-tender-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("49a18712-5f66-480f-ba7d-a0d434f762bd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/12_love-me-hot-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("80bccb02-be31-4e47-be2d-f7ac87a5dbb5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/13_big-john-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Big John",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("3ae9f024-0f8f-4c5c-9cf5-813e26d253c1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/29_love-me-tender-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7e0acc3a-4638-4dc9-878c-f0f1a132205d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/31_love-me-hot-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("794fd599-ed86-4a11-a1ea-5d437ae291b1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/28_big-john-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Big John",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e718fa00-e7b8-470f-a5e8-b6058d1cd2f8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/30_love-me-tender-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d377d8e9-edbe-489f-a544-59e412557356"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/32_love-me-hot-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d55ca5db-88c8-4be0-9a11-3f15fa1eb6d6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/123_soulbites-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites",
                            Price = 38.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e44b04a7-a22c-4187-aae4-53f6915399b5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/124_soulbites-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites Max",
                            Price = 45.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e7af595a-7832-4b6c-88ef-237e4cfa8fe1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/33_1-slyder-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("50e034ce-75f1-428c-bfde-ba5e1e35dccd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/39_1-slyder-chilli.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("fc0a3b96-9e56-44ce-81fa-c933b1d43a5c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/36_1-slyder-cheese.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 16.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("0eb502a0-df28-4a74-b923-5d01850c1774"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/34_2-slyders-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "2 Slyders",
                            Price = 27.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5837dcce-7d5d-41eb-820d-6eed46a2a17b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A generous sharing platter of 4 succulent Flame-grilled Shisanyama Chicken Sosaties and 20 Winglets, served with 2 portions of our Sharing Wedges, 2 Garlic Rolls and our special PERinase dip.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/3d93a55d-440a-407c-8b7b-97cc1e6c510a",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Cabo Sosatie Snack Platter",
                            Price = 349.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1eb8daee-a0c0-4cda-9ba2-7e144b5a919d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Half Platter",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/f93c9cbe-5f94-4bb4-a937-811c28bd88df",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Big on veg platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("abe025c3-a723-486f-b2e8-32d33876ccb8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pulled Chicken Wraps (cut into 6), 3 Chicken Wraps (cut into 6), 2 Sharing Wedges, 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/ccc05d6a-734b-4fec-bbc7-50a7da7ad2da",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Hands-on delicious platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("fa6a18fa-527a-4a13-a0aa-4146b386f028"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "One and a 1/2 full chickens ( cut into 12), 2 Flame-grilled Mielies cut into 3 (6 portions), 4 Kids Burgers, 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/5182f543-741a-4317-a731-e8098a228c37",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "More to share platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("18ea8a1c-cd53-4fe8-ad88-5cd4727f7ef5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Two full chickens (cut into 16), 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions), 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/fa60cb07-3c21-4718-8f02-cb91fd83319b",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Peri-er Platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("de4310db-ab94-48b4-ab18-3c1845175423"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Veg Burgers, 2 Halloumi & Roast Veg Wraps, 2 Halloumi & Roast Veg Pitas, 2 Sharing Wedges, 4 Flame-grilled Mielies cut into 3 (12 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/3b7bc5aa-eb6c-4f3b-a289-ae9669f410dd",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Veggie veggie nice platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "21 Pieces of juicy chicken seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "21 Piece Bucket",
                            Price = 365.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f648d53a-091f-4c2a-8e97-b3da713c37e9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs & spices.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "15 Piece Bucket",
                            Price = 279.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f93b19f1-6417-46b4-9f90-4c2faff42751"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "9 Piece Bucket",
                            Price = 182.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7dfced6a-ce24-4dd2-83b5-f817dd4128ce"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The new Colonel burger, 1 piece of original recipe chicken, regular mash & gravy, chips & a buddy no sugar drink.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Fully Loaded Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a8e4c058-b1cd-41a5-99e6-ead9c6654d11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The Crispy Zinger burger, 1 piece of original recipe chicken, regular mash & gravy, chips & Buddy no sugar.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Zinger Fully Loaded Buddy Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("cc93bd06-afc9-4355-81e7-b2c09634d1a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Nuggets, 1 Crunch Burger, 1 Small Chips and a Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Nugget Box Buddy Meal",
                            Price = 79.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f6c1aa3e-f3ef-4272-a120-9996374366f2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Crunch Burger, 1 Piece of Original Recipe Chicken, 2 Zinger Wings, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "All Star Box Meal Buddy",
                            Price = 94.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8c97616b-50ca-41dd-b418-fd323fd64dc0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wrapsta, 1 Piece of Original Recipe Chicken, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Wrapsta Box Meal",
                            Price = 84.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("deb3d71a-d247-40aa-a70d-bfa202ed0cfc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 1, with a Buddy no sugar free drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 1 Buddy",
                            Price = 52.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c77cfb15-6db8-437b-864c-5e3883700a55"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a delicious Crunch Burger an orginal receipe chicken piece with small chips and a buddy no sugar drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Crunch Burger Box Buddy",
                            Price = 71.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("77120fe8-146c-43b8-bfd4-e36daf756164"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 5, with 2 Buddy No Sugar",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 5 Buddy",
                            Price = 143.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7106e3af-0ed4-484f-8c85-f040da617c7b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 Pieces of Original Recipe chicken cooked to golden perfection and a large portion of chips or coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Five",
                            Price = 121.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("15bf15c8-f37e-4842-a70c-58ab6d9aaedf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of original recipe chicken, a portion of small chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Chips",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("bb205de7-5dc1-4953-8b5b-c9529699d651"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of Original Recipe Chicken with a portion of pap and gravy",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Pap",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d2d5d3f2-b9fc-494a-a4bf-da98a594cb1d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of Original Recipe Chicken and Small Chips or Coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Chips",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("db4944d7-6153-4044-aa5d-984d4e096e2f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a piece of original recipe chicken, 2 zinger wings and a small scrumptious chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Bucket For One",
                            Price = 46.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("ffafa4c5-ad93-4ff5-894e-43cc854ceb60"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of original recipe chicken cooked to golden perfection and a regular portion of pap & small gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Pap",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a3001911-92a0-48f1-b61f-b65d32497dee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Cappy Juice 1.5 Litre",
                            Price = 44.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("44326129-a901-4b05-952a-e84a2c50fdb1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Oreo bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Oreo Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5e6012a5-c212-4ddf-88c8-f86895400510"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Berry bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Verry Berry Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("788dbd5b-d704-48c9-baad-4814cd9920df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Milk shake milk shake shake shake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Strawberry Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1265f9fa-385c-496a-9782-2aaa76d5d377"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chocolate Milkshake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Chocolate Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6c9716b6-2a7f-498d-8a1e-d0e50777be9c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke 1.5 Litre Bottle",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke 1.5 Litre Bottle",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("030de386-f045-4307-8733-1538612509d5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar 1.5 Litre",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar 1.5 Litre",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c4b74da6-204e-4ae9-9ddf-1917d43106c4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar Buddy 440ml",
                            Price = 22.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("76da75cc-8bfb-4776-93b5-23c64106cc89"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coca-Cola Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coca-Cola Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f549852f-02fe-44d5-84fd-0854b2c49728"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fanta Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Fanta Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fdad09c6-1da4-456a-87db-7737259d6ab5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sprite Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Sprite Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("065a75be-c25f-4261-b6dc-3ace86f85c93"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bonaqua Still Spring Water 500ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Bonaqua Still Spring Water 500ml",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("ba48057b-8754-4c45-af06-8b1e045d9c5a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "10 Piece Family Treat",
                            Price = 316.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fb352b25-382d-487b-9ce9-ba70dd54423c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "8 Piece Family Treat",
                            Price = 274.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dfaacd33-a1ad-44ff-9121-d4f2a9a6a27f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("817a0d5c-239b-41c9-ab03-ac6e969771d9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 6 pieces of delicious original recipe chicken, 1 large chips, 1 regular coleslaw plus 2 regular mash and gravies.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "All In One Feast",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a00abdd7-1f2e-4a33-b80b-b7b640bbc789"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 4 pieces of original recipe chicken, 2 small chips, 1 small pops & 2 buddy no sugar drinks.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "2 Can Dine Buddy",
                            Price = 164.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("80cedd6c-dcfe-4c0c-b72d-a894a4342bc2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy KFC`s new Jalapeno loaded fries with brand new Hot * spicy sauce",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Jalapeno Loaded Fries",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("57d28e38-f2c8-4adb-a04d-9f72fecb0590"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("50a3da8a-43f8-453b-bab3-c79f45dfb98d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Dunked Wings",
                            Price = 104.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("4faa9c5f-c086-47fb-bcd2-0bd11f515d2c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Hot Zinger Wings",
                            Price = 89.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("791d6ac9-fa67-43a8-b5b3-ee9b28c7364c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken, tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Large Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3e4fcb0f-db2b-4dbb-bc2c-6fec4a2e2950"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside. Served with a generous sprinkle of fruit chutney flavour.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Sprinkle Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3259cd64-9f23-4f48-8dc2-054c1da1ee70"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Dunked Wings",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8b274d79-0b17-4e56-afae-96f18d0ede62"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Zinger Wings",
                            Price = 48.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9c7e346d-84b6-4cdd-8c1f-2c0ca44b1391"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "9Pc Nuggets",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8b65c598-7494-4319-ad25-9f03a5c54751"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken dunked in KFC’s famous honey, ginger and soy sauce!",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Dunked Pops",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8ff52b3c-332b-4d9a-a8e6-429fda6202c8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "6Pc Nuggets",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3a6ba490-f958-452e-b566-4dc688041f1d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Small Pops",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0ca31ae2-9bcf-4ffb-85f5-b8a3e0cc5e1c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0e9342dc-6614-4ef1-8e8d-a466206d942f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Colonel burger, Our trademark real chicken fillet; A fresh Brioche bun, Creamy Colonel sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Colonel Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1021b353-c1f9-4b3b-81f0-90db89156514"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Crispy Zinger burger, Our trademark real chicken fillet; A fresh Brioche bun, New Hot & Spicy sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Zinger Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f088dce6-3be1-414b-b128-0bc4063c8b2e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new standard in burgers! 2 Spicy, crunchy mini fillets with 2 cheese slices, lettuce & tomato covered in tangy dressing on a burger bun",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Double Crunch Burger",
                            Price = 68.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d02ef98b-b168-4d10-aacc-bb641f320fcf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet zinger recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Zinger Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("35be52b8-4d3d-4ef0-8618-07b1330982ba"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet original recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Colonel Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("89df5e89-1811-4fc0-83c8-54a38232a715"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy chicken strips, shredded crisp lettuce, sliced tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Classic Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("622290bb-6edb-4aba-8ccd-15ec683ffde0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy new and improved chicken strips, shredded crisp lettuce, sliced tomato, topped with Colonel dressing and sweet chilli sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Sweet Chilli Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a7112cfc-7e74-428b-9b73-65ba3da211a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The game changer is here, and with a delicious spicy crunch fillet, tomato, lettuce and cheese with tangy dressing all wrapped up in a mini tortilla and grilled to perfection, meal time will never be the same again.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Wrapsta",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("72e8be54-e205-4160-af8c-0875ae95ae45"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A spicy, crunchy mini fillet with a slice of cheese and lettuce, covered in tangy dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Crunch Burger",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("74285bdf-b220-4a60-a745-37a52240f055"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("445e387a-89a8-4076-98ec-a45d33f1c0fd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Extra Hot & Spicy Zinger sauce on the side",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Sauce - Hot & Spicy",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("7997810e-930a-4692-95e1-6a9b468f38cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Chips",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("fbb4b475-d11d-4554-8a15-2dc39b25d3ea"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Chips",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e45d647d-89c2-43a3-a8ff-e84b88124b09"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 Piece Chicken",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "1 Piece Chicken",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8031caf1-bcdb-4187-b15d-ee8531d0eb46"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Mash & Gravy",
                            Price = 27.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("718813e8-0f37-4fe7-832f-480653519168"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of freshly prepared cabbage, onions and carrots in a delicious dressing",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Coleslaw",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0463eb8b-ec5c-43ed-8b84-7a88158099c7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Mash & Gravy",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6a07cb83-d46e-45f2-bc97-cd79651d4354"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Small Chips",
                            Price = 16.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a51b6177-76e7-490d-a223-0b0dcc3ad8a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oven baked, fresh mini loaf",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Mini Loaf",
                            Price = 14.90m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardExpiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvvCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.Property<Guid>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/02.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/04.png",
                            Name = "KFC",
                            Tags = "Chicken, Chicken Wings, Burgers, Wraps, Fast Food, Dessert, American, Spicy, Light Meals, Juice, Halaal, Breakfast,"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/10.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/14.png",
                            Name = "Chicken Licken",
                            Tags = "Chicken, Burgers, Chicken Wings, Spicy, Light Meals, Salad, Fast Food, Lunch, Dinner, Fries, Fried"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/11.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/15.png",
                            Name = "Nandos",
                            Tags = "Chicken, Burgers, Chicken Wings, Fast Food, Light Meals, Portuguese, Salad, Spicy, Dessert, South African, Dinner, Chips, Juice, Middle Eastern"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-e5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/12.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/16.png",
                            Name = "Roman's Pizza",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, American, Dinner"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-f5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/13.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/17.png",
                            Name = "Debonair's Pizza",
                            Tags = "Pizza, Fast Food, Italian, Chicken Wings, Dessert, Vegetarian, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-b4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/01.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/01.png",
                            Name = "McDonald's",
                            Tags = "Burgers, Fries, Fast Food, American, Breakfast, Dessert, Salad, Chicken, Juice, Halaal, Lunch, Dinner, Cafe, Coffee, Milkshake, Wraps"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-c4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/14.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/18.png",
                            Name = "Steers",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-d4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/15.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/19.png",
                            Name = "Fishaways",
                            Tags = "Fish, Seafood, Fast Food, Halaal, Chips, Lunch, Dinner, Salad, Dessert, Juice, Healthy, Light Meals, Seafood, Grilled, Sushi, Mediterranean, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-e4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/16.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/20.png",
                            Name = "Kung Fu Chicken",
                            Tags = "Chicken, Fast Food, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-f4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/17.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/21.png",
                            Name = "Galito's",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("1313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/18.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/22.png",
                            Name = "Doppio Zero",
                            Tags = "Italian, Vegan, Vegetarian, Pizza, Pasta, Burgers, Grill, Tapas, Woodfired, Healthy, Salad, Bakery, Breakfast, Calamari, Seafood, Chicken, Wraps, Poke, Mediterranean, Sandwiches, Dessert, Coffee, Health Drinks, Kids, Milkshake, Chips, Fruit, Haute"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/19.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/23.png",
                            Name = "Mochachos",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian, Grill, Lunch, Dinner, Mexican, Burrito, Prego, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/20.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/24.png",
                            Name = "Simply Asia",
                            Tags = "Asian, Thai, Chinese, Japanese, Noodles, Sushi, Soup, Fried, Spicy, Healthy, Low Carb, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy, Traditional"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-2837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/21.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/25.png",
                            Name = "Andiccio24",
                            Tags = "Pizza, Pasta, Salad, Soup, Healthy, Smoothies, Dessert, Milkshake, Homemade, Oven Baked, Italian, Ice Cream, Contemporary, Wheat and Gluten free, Vegan, Mediterranean"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-3837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/22.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/26.png",
                            Name = "Pedro's Chicken",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-4837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/23.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/27.png",
                            Name = "Pizza Perfect",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, Light Meals, Dinner, Chicken Wings, Kids, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-5837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/24.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/28.png",
                            Name = "Pron",
                            Tags = "Chinese, Asian, Fried, Healthy, Tapas, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-6837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/25.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/29.png",
                            Name = "The Fussy Vegan",
                            Tags = "Breakfast, Burgers, Burrito, Dessert, Healthy, Sandwiches, Plant-Based, Health Drinks, Health, Vegan"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-8837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/26.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/30.png",
                            Name = "Pizza Baby",
                            Tags = "Pasta, Pizza, Salad, Italian, Fast Food, Dessert, Healthy, Chicken, Non-Alcoholic, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tei Avon",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "X&O",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hao Ke Lai",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Momo Baohaus",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "La Padrino",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Asian Twist",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thunder Gun",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d1-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chop Stix",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-173a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mike's Heritage House",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-273a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spiceburg Greenside",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-373a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Miyako Sushi",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Curry Up",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-573a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Topo Gigio",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-673a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Satori",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-773a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza e Vino",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-873a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jimmy's",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-973a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pasta Worx",
                            Tags = ""
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.Property<Guid>("BasketLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketLineId");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Property<Guid>("SubmenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("Submenus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.CreditCard", b =>
                {
                    b.Property<Guid>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("CreditCardId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.DeliveryAddress", b =>
                {
                    b.Property<Guid>("DeliveryAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("DeliveryAddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Submenu", null)
                        .WithMany("menuItems")
                        .HasForeignKey("SubmenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.ShoppingCart.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Navigation("menuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
