// <auto-generated />
using System;
using Gaolos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gaolos.Persistence.Migrations
{
    [DbContext(typeof(GaolosDbContext))]
    [Migration("20240521135002_Seed7")]
    partial class Seed7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SvgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dda"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/10.jpg",
                            Name = "Haute Cuisine",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/02.jpg",
                            Name = "Noodles",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b44e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Pizza & Pasta",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Burgers & Fries",
                            SvgUrl = "img/food-delivery/icons/burger.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ae98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/08.jpeg",
                            Name = "Grills & Steak",
                            SvgUrl = "img/food-delivery/icons/steak.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/07.jpg",
                            Name = "Chicken & Wings",
                            SvgUrl = "img/food-delivery/icons/chicken.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ce98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/06.jpg",
                            Name = "Healthy food",
                            SvgUrl = "img/food-delivery/icons/healthy.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("de98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/09.jpg",
                            Name = "Fish & Seafood",
                            SvgUrl = "img/food-delivery/icons/fish.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ee98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/05.jpg",
                            Name = "Coffee & Desserts",
                            SvgUrl = "img/food-delivery/icons/coffee.svg"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Discount.Coupon", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlreadyUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            CouponId = new Guid("db1cb3d1-2ee5-4373-8140-048a4dad3247"),
                            AlreadyUsed = false,
                            Code = "BeNice",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 10m
                        },
                        new
                        {
                            CouponId = new Guid("aef89083-c265-43f9-8eec-68cb55822d7b"),
                            AlreadyUsed = false,
                            Code = "Awesome",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 20m
                        },
                        new
                        {
                            CouponId = new Guid("01faab3d-75b0-4c24-a245-3d08f95551d2"),
                            AlreadyUsed = false,
                            Code = "AlmostFree",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 50m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you want more for everyone",
                            Name = "Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When the craving's got you",
                            Name = " Just Hotwings",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need some soul food",
                            Name = "Soulicious",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When a sister needs some soul",
                            Name = "Soul Sister Specials",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you just can't resist",
                            Name = "Just Chicken",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When it's almost mahala",
                            Name = "Easy Bucks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're in the mood for a burger",
                            Name = "Just Chick'n Burgers",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're hungry at heart",
                            Name = "Top Deluxe",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need nuggets to feed your soul",
                            Name = "Soul Bites",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need a little snack",
                            Name = "Original Slyders",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Platters",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buckets",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Box Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Streetwise",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drnks & Treats",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharing Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wings & Snacks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Burgers & Wraps",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Add-Ons",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubmenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuId");

                    b.HasIndex("SubmenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = new Guid("17dbb70f-f94f-4b79-a467-5ce7bf7748a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal",
                            Price = 73.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2eb1dadf-2d0f-44ac-a694-cb9a8a9905ea"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal Max",
                            Price = 76.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("cbb50846-929e-482e-9fa8-44bbee8fa8fe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal",
                            Price = 86.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1fc551a0-c900-448d-8a7b-ba3287a5c844"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal Max",
                            Price = 90.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d02b1d05-4da8-4a92-bac4-10ace07216c7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "6 Hotwings",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ffa93566-de68-4ce9-a5fe-d4ad44a66584"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "12 Hotwings",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("edaf4941-a8b6-427a-8e11-fccbed9cd74f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "24 Hotwings",
                            Price = 168.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("51418898-24bd-4b20-9b53-4a793fb72309"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "36 Hotwings",
                            Price = 231.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5499ae1c-38f4-45ac-a8f9-a017bcd447c4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Square Meal",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("70e504da-c2f3-47cd-9a38-5deeb7a73f82"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Soul",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("469428e7-179e-4531-b4a1-b709449e212f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Straight",
                            Price = 57.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f65e0c0e-581b-446a-b261-9a0a76b3785e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Combo",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d4633a80-7bc5-48a5-ab80-c281339b7a7d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/15_hotwings-circle6ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Deluxe",
                            Price = 67.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2fc93bec-4aac-45f5-afa9-a6f863db2184"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/16_hotwings-circle6ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Max",
                            Price = 69.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7507898d-9f75-4ade-8a53-b845f722d24d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/18_feed-my-craving-circle10ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Feed My Craving",
                            Price = 79.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("71e913fd-dddf-4430-865e-f1689b2e7de8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/22_soulman-load-up.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soulman Load Up",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f1eafde5-af1c-4834-90dc-413dff967a91"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/21_rock-my-soul-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul",
                            Price = 105.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a650216f-fe15-4fbd-8f06-66284c3d5a21"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/17_hotwings-party-circle16ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Party",
                            Price = 132.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1f4e79e4-cdea-46d9-81c5-a8494942f79f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/24_family-full-house-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 143.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c2374b63-94b3-47cf-a17e-8d820d37c406"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/23_soul-mates-classic-party.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Mates Classic Party",
                            Price = 145.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("bcb3f4e2-14ca-4722-b693-dde8a733f8c3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/25_family-full-house-circle8ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 173.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e9ab322d-dcf2-41ab-b443-6ee8a6ee5196"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/129_soulsister-2-vibe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Vibe",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("765cccf4-a0af-4d06-a428-d43a703264ac"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/49_soulsister-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister",
                            Price = 43.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f8129c16-dc87-4bdf-8dd6-fa8a25fbc06a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/50_soulsister-circle2ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Deluxe",
                            Price = 62.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("18b9b87b-aa57-48f9-b5e6-535bdf683d58"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/51_soulsister-circle2ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Max",
                            Price = 65.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("07860bca-7c4f-442f-b5ea-62bb2fadc5af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/52_soulsister-party-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d335c9f7-fbb3-4970-8bda-c948a989676e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/53_soulsister-party-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 112.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("db3a3978-9ebe-4af5-8b03-0fae07352f14"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/54_just-circle1ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 1",
                            Price = 20.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1c37ab32-e7f3-4408-81a1-6ba787e1abc7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/55_just-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 2",
                            Price = 39.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("518b70f7-6c0a-4071-9858-2779e0f1e3c3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/56_just-circle3ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 3",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("84056c84-4f13-41d1-af1d-dcfb4cf0c26a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/57_just-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 4",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b5d709b0-380f-4c3c-8db7-08e9e645089a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/58_just-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 5",
                            Price = 99.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d33fcb16-1bce-4a22-91dc-e73fb18dd7e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/59_just-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 6",
                            Price = 120.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("06328a00-f453-44d2-9dd3-bd14195caf2e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/60_chicken-inn-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Chicken Inn",
                            Price = 150.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("10623ecd-7ac6-45a6-b7c7-49ee52665724"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/61_family-bucket-circle15ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Bucket",
                            Price = 230.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5fd0ec7f-812c-44a5-8e78-89cfc795f005"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/62_family-barrel-circle21ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Barrel",
                            Price = 300.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("302a18eb-4df1-4299-8298-8880b2862651"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/44_slyder-snack-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Slyder Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("747d13cf-8d18-43fb-a870-6ccb4e901721"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/45_popcorn-chicken-shaker.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Popcorn Chicken Shaker",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("bd7ae707-f57f-43d9-b036-6cf98e867a75"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/46_hotwings-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Hotwings Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("85c2bcd9-f4d4-4e34-9bb8-312764b74b94"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/47_soul-mix-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Mix Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("836082d3-7cab-417b-a9b6-e67eb7d75863"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/125_soulbites-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Bites Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("59908c68-0910-4a20-a0dd-b8ecf32a0037"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/7_love-me-tender-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2b2d7a20-dc3b-4ef4-b44e-40a5bf7e70b7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/10_love-me-hot-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("0da0cb41-0145-474b-b333-db03eb9a5e44"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/9_love-me-tender-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("94a120d6-c255-4212-8cc0-b504752c51e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/12_love-me-hot-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("58ecc19f-037b-4233-b65d-f3b5f43b5b37"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/13_big-john-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Big John",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e7c36ca3-eda8-422c-b839-a8eb86b81173"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/29_love-me-tender-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f2cc06d1-fb02-4a75-a7ae-eeb0f82354cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/31_love-me-hot-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("3db3dd1b-a946-4d4e-ac4d-789f7b0e1e77"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/28_big-john-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Big John",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2ac13a13-19ef-4327-a75d-2530f1dbe226"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/30_love-me-tender-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("bb468784-c267-47c4-ba1d-73e48e2cf2af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/32_love-me-hot-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e9ed6634-23c6-4628-af56-f83a461c36cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/123_soulbites-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites",
                            Price = 38.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5bd279fc-acbe-4da6-b48f-155b0f68e91d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/124_soulbites-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites Max",
                            Price = 45.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1756cda3-4e98-4192-8b15-e5fa1ba4b65e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/33_1-slyder-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1991139c-5a3b-4463-a79a-774a93a105a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/39_1-slyder-chilli.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("21cc5980-f73a-4d0a-8752-267777e84522"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/36_1-slyder-cheese.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 16.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7b6807eb-1688-4f8b-970c-81fc202e8f34"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/34_2-slyders-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "2 Slyders",
                            Price = 27.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("36ee4738-f943-49a4-949e-4570bf39d02d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A generous sharing platter of 4 succulent Flame-grilled Shisanyama Chicken Sosaties and 20 Winglets, served with 2 portions of our Sharing Wedges, 2 Garlic Rolls and our special PERinase dip.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/3d93a55d-440a-407c-8b7b-97cc1e6c510a",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Cabo Sosatie Snack Platter",
                            Price = 349.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("cb376eb1-ba64-4ca6-8b5c-3fab8bc8f4e9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Half Platter",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/f93c9cbe-5f94-4bb4-a937-811c28bd88df",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Big on veg platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2688f647-68d2-4b2e-8b4e-b188d6fba6aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pulled Chicken Wraps (cut into 6), 3 Chicken Wraps (cut into 6), 2 Sharing Wedges, 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/ccc05d6a-734b-4fec-bbc7-50a7da7ad2da",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Hands-on delicious platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f01feff4-d807-496f-bf7a-1b2c70237a73"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "One and a 1/2 full chickens ( cut into 12), 2 Flame-grilled Mielies cut into 3 (6 portions), 4 Kids Burgers, 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/5182f543-741a-4317-a731-e8098a228c37",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "More to share platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b847ea6d-1fe5-4897-ae47-aafe409414b7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Two full chickens (cut into 16), 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions), 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/fa60cb07-3c21-4718-8f02-cb91fd83319b",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Peri-er Platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e4cadce6-861d-4bc7-9e87-dcb827982cdf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Veg Burgers, 2 Halloumi & Roast Veg Wraps, 2 Halloumi & Roast Veg Pitas, 2 Sharing Wedges, 4 Flame-grilled Mielies cut into 3 (12 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/3b7bc5aa-eb6c-4f3b-a289-ae9669f410dd",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Veggie veggie nice platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "21 Pieces of juicy chicken seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "21 Piece Bucket",
                            Price = 365.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8392f9ad-325b-44f9-a2f1-22e3f2e34cdb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs & spices.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "15 Piece Bucket",
                            Price = 279.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("31d35198-b369-4ab7-922d-70907113ad8c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "9 Piece Bucket",
                            Price = 182.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3519be02-34a8-427e-81ce-2face6027f87"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The new Colonel burger, 1 piece of original recipe chicken, regular mash & gravy, chips & a buddy no sugar drink.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Fully Loaded Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("ebddcea0-c74e-40ec-a6ce-b1a750b15a68"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The Crispy Zinger burger, 1 piece of original recipe chicken, regular mash & gravy, chips & Buddy no sugar.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Zinger Fully Loaded Buddy Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("59daf314-2fd3-43b1-896d-6f4414db68c2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Nuggets, 1 Crunch Burger, 1 Small Chips and a Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Nugget Box Buddy Meal",
                            Price = 79.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9ef39876-5650-4464-961e-5e9abf435c33"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Crunch Burger, 1 Piece of Original Recipe Chicken, 2 Zinger Wings, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "All Star Box Meal Buddy",
                            Price = 94.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("33725ee6-cc86-4def-9675-c3ae2a2c0694"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wrapsta, 1 Piece of Original Recipe Chicken, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Wrapsta Box Meal",
                            Price = 84.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5d393908-c000-43ac-a0c9-6e8f6879d729"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 1, with a Buddy no sugar free drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 1 Buddy",
                            Price = 52.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dd08154e-fd2a-437d-9bb4-60630f6e4acf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a delicious Crunch Burger an orginal receipe chicken piece with small chips and a buddy no sugar drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Crunch Burger Box Buddy",
                            Price = 71.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("62c4386e-22b2-477c-97d0-50562a290f7c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 5, with 2 Buddy No Sugar",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 5 Buddy",
                            Price = 143.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("db2ed413-b668-4458-b3f9-59da846ee32e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 Pieces of Original Recipe chicken cooked to golden perfection and a large portion of chips or coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Five",
                            Price = 121.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fa58a37c-2792-4176-8f81-817aa78f470b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of original recipe chicken, a portion of small chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Chips",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("deead32b-3e8c-48a9-8448-25f0d7ad59f5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of Original Recipe Chicken with a portion of pap and gravy",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Pap",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0b413603-d814-4d8a-ad3e-9c417eadf5ac"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of Original Recipe Chicken and Small Chips or Coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Chips",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9c032b9e-e9b1-46f9-b2cc-1ad740764be7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a piece of original recipe chicken, 2 zinger wings and a small scrumptious chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Bucket For One",
                            Price = 46.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9972fd12-6f1a-4a92-85b9-13c7cd657667"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of original recipe chicken cooked to golden perfection and a regular portion of pap & small gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Pap",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0c6c9d29-2fc3-40a8-8161-b204121dfe3c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Cappy Juice 1.5 Litre",
                            Price = 44.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("20306cc6-8622-4baf-b9b2-bdd6e6a2d4e5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Oreo bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Oreo Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d7e34cf5-78d7-4fce-8415-5946bd5667a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Berry bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Verry Berry Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("cc6f2a7c-61da-495c-a2c2-ff25a1b615bf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Milk shake milk shake shake shake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Strawberry Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("52c1400b-1617-4948-914a-f0b8d0c252af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chocolate Milkshake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Chocolate Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0f9b7c23-7f78-4d97-a609-ace0c4a570f2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke 1.5 Litre Bottle",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke 1.5 Litre Bottle",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6479aa1c-3f5d-474a-9fa8-23646d8cd864"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar 1.5 Litre",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar 1.5 Litre",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7897d249-c01d-4ab4-9513-ea1bf75dbf08"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar Buddy 440ml",
                            Price = 22.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f843e6fb-d61d-49bc-ad11-c2b4fe1c9ccc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coca-Cola Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coca-Cola Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6143a334-f322-40be-8219-12f672fddd9a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fanta Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Fanta Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d0a70b7e-2b7e-4fdd-af33-1484938e33b8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sprite Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Sprite Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b3360f4a-e2ba-4d10-aab3-ed93f6e30ac3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bonaqua Still Spring Water 500ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Bonaqua Still Spring Water 500ml",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("55e07f38-dae7-46b9-a81c-6080edd20600"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "10 Piece Family Treat",
                            Price = 316.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3fd5cba4-9f8f-4787-9158-cd6d03833825"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "8 Piece Family Treat",
                            Price = 274.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0f7008b3-a165-43fa-b6f1-102c1f9b8312"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("484129ad-3733-426d-8823-5b3da4fff0ff"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 6 pieces of delicious original recipe chicken, 1 large chips, 1 regular coleslaw plus 2 regular mash and gravies.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "All In One Feast",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("55321643-40f1-4d89-a9f9-dd312ef845d3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 4 pieces of original recipe chicken, 2 small chips, 1 small pops & 2 buddy no sugar drinks.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "2 Can Dine Buddy",
                            Price = 164.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5d50e52e-59f5-43a9-8f0f-ba667ef33c81"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy KFC`s new Jalapeno loaded fries with brand new Hot * spicy sauce",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Jalapeno Loaded Fries",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("daa2b23d-ef61-41d8-be2c-996a8368fd0e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("aa07200c-4cec-4d46-b52a-e5d1391f1640"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Dunked Wings",
                            Price = 104.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3afd30f3-d58e-4fc3-bfb8-1eef9ee2dd2e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Hot Zinger Wings",
                            Price = 89.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("08a92cce-a521-46e0-841d-01d73ca7ecd7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken, tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Large Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("91b4594f-0c4c-4108-9f34-38c002da4752"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside. Served with a generous sprinkle of fruit chutney flavour.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Sprinkle Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("70f5fd08-8ed3-4727-968b-5e1743e819cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Dunked Wings",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("935f6a08-ab84-4c61-b576-5a99d03a5beb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Zinger Wings",
                            Price = 48.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d76169a9-e2e3-479e-93b5-c64886b6017c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "9Pc Nuggets",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("bb0d7c98-0150-45ae-8390-b68c3dbb4d8f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken dunked in KFC’s famous honey, ginger and soy sauce!",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Dunked Pops",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8a4dba8f-479c-4512-bcb3-9dd4c0fd1e56"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "6Pc Nuggets",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fc984c0d-fc8c-4ea6-926c-f1214bb5392c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Small Pops",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("88d63c12-c213-4a6d-809a-8786fd6e87d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("4ca91db9-a386-49b9-895f-c91792e29f7b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Colonel burger, Our trademark real chicken fillet; A fresh Brioche bun, Creamy Colonel sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Colonel Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("189ed3a6-295f-44d8-b0c7-262fac38f198"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Crispy Zinger burger, Our trademark real chicken fillet; A fresh Brioche bun, New Hot & Spicy sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Zinger Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b65db781-aa41-4379-8800-7cfb372882ce"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new standard in burgers! 2 Spicy, crunchy mini fillets with 2 cheese slices, lettuce & tomato covered in tangy dressing on a burger bun",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Double Crunch Burger",
                            Price = 68.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b8ba395c-ddb9-4975-bc6a-7e252a338ff5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet zinger recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Zinger Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6a79d254-6b87-40dc-9333-e0149cc75a9c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet original recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Colonel Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2c41009e-4d18-4655-804d-d7a03d64e941"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy chicken strips, shredded crisp lettuce, sliced tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Classic Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("336b729e-dfd3-4de2-a143-41bbe3289a23"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy new and improved chicken strips, shredded crisp lettuce, sliced tomato, topped with Colonel dressing and sweet chilli sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Sweet Chilli Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("960f1bcd-4031-4b88-9ccb-61fd338f322c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The game changer is here, and with a delicious spicy crunch fillet, tomato, lettuce and cheese with tangy dressing all wrapped up in a mini tortilla and grilled to perfection, meal time will never be the same again.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Wrapsta",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d0eebb4b-7983-462b-b793-a1c245c122d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A spicy, crunchy mini fillet with a slice of cheese and lettuce, covered in tangy dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Crunch Burger",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("44bcf6c1-a110-487d-a108-4f27e2ae9f8b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1dcf0651-ae59-4b39-a3b0-7a014fb3273a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Extra Hot & Spicy Zinger sauce on the side",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Sauce - Hot & Spicy",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("aa42ca4c-fb64-4be1-9155-531f72c684b5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Chips",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("3be5accb-b248-4365-ae53-33baf097b22d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Chips",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8bd683fc-146a-4676-95d4-ab23be5b73d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 Piece Chicken",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "1 Piece Chicken",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2060699b-bff0-46c3-b881-ae4dec79309c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Mash & Gravy",
                            Price = 27.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a4284edc-fe47-4815-bb3d-7f66606c3207"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of freshly prepared cabbage, onions and carrots in a delicious dressing",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Coleslaw",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("82c70e56-5a65-48df-9997-1d770e7573a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Mash & Gravy",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("902aac07-4fc8-43bc-b638-98b527669c11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Small Chips",
                            Price = 16.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("75c99d46-f4ea-44cd-81b6-b41bd877d735"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oven baked, fresh mini loaf",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Mini Loaf",
                            Price = 14.90m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardExpiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvvCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.Property<Guid>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "KFC",
                            Tags = "Chicken, Chicken Wings, Burgers, Wraps, Fast Food, Dessert, American, Spicy, Light Meals, Juice, Halaal, Breakfast,"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken Licken",
                            Tags = "Chicken, Burgers, Chicken Wings, Spicy, Light Meals, Salad, Fast Food, Lunch, Dinner, Fries, Fried"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nandos",
                            Tags = "Chicken, Burgers, Chicken Wings, Fast Food, Light Meals, Portuguese, Salad, Spicy, Dessert, South African, Dinner, Chips, Juice, Middle Eastern"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-e5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roman's Pizza",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, American, Dinner"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-f5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Debonair's Pizza",
                            Tags = "Pizza, Fast Food, Italian, Chicken Wings, Dessert, Vegetarian, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-b4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "McDonald's",
                            Tags = "Burgers, Fries, Fast Food, American, Breakfast, Dessert, Salad, Chicken, Juice, Halaal, Lunch, Dinner, Cafe, Coffee, Milkshake, Wraps"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-c4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steers",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-d4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fishaways",
                            Tags = "Fish, Seafood, Fast Food, Halaal, Chips, Lunch, Dinner, Salad, Dessert, Juice, Healthy, Light Meals, Seafood, Grilled, Sushi, Mediterranean, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-e4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kung Fu Chicken",
                            Tags = "Chicken, Fast Food, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-f4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Galito's",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("1313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Doppio Zero",
                            Tags = "Italian, Vegan, Vegetarian, Pizza, Pasta, Burgers, Grill, Tapas, Woodfired, Healthy, Salad, Bakery, Breakfast, Calamari, Seafood, Chicken, Wraps, Poke, Mediterranean, Sandwiches, Dessert, Coffee, Health Drinks, Kids, Milkshake, Chips, Fruit"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mochachos",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian, Grill, Lunch, Dinner, Mexican, Burrito, Prego, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Simply Asia",
                            Tags = "Asian, Thai, Chinese, Japanese, Noodles, Sushi, Soup, Fried, Spicy, Healthy, Low Carb, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy, Traditional"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-2837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Andiccio24",
                            Tags = "Pizza, Pasta, Salad, Soup, Healthy, Smoothies, Dessert, Milkshake, Homemade, Oven Baked, Italian, Ice Cream, Contemporary, Wheat and Gluten free, Vegan, Mediterranean"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-3837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro's Chicken",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-4837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza Perfect",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, Light Meals, Dinner, Chicken Wings, Kids, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-5837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pron",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-6837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "The Fussy Vegan",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-8837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza Baby",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tei Avon",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "X&O",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hao Ke Lai",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Momo Baohaus",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "La Padrino",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Asian Twist",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thunder Gun",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d1-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chop Stix",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-173a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mike's Heritage House",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-273a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spiceburg Greenside",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-373a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Miyako Sushi",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Curry Up",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-573a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Topo Gigio",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-673a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Satori",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-773a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza e Vino",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-873a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jimmy's",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-973a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pasta Worx",
                            Tags = ""
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.Property<Guid>("BasketLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketLineId");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Property<Guid>("SubmenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("Submenus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.CreditCard", b =>
                {
                    b.Property<Guid>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("CreditCardId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.DeliveryAddress", b =>
                {
                    b.Property<Guid>("DeliveryAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("DeliveryAddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Submenu", null)
                        .WithMany("menuItems")
                        .HasForeignKey("SubmenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.ShoppingCart.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Navigation("menuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
