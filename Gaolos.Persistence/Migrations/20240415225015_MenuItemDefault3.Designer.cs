// <auto-generated />
using System;
using Gaolos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gaolos.Persistence.Migrations
{
    [DbContext(typeof(GaolosDbContext))]
    [Migration("20240415225015_MenuItemDefault3")]
    partial class MenuItemDefault3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SvgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dda"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Haute Cuisine",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Noodles",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b44e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Pizza & Pasta",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Burgers & Fries",
                            SvgUrl = "img/food-delivery/icons/burger.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ae98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Grills & Steak",
                            SvgUrl = "img/food-delivery/icons/steak.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Chicken & Wings",
                            SvgUrl = "img/food-delivery/icons/chicken.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ce98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/06.jpg",
                            Name = "Healthy food",
                            SvgUrl = "img/food-delivery/icons/healthy.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("de98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/03.jpg",
                            Name = "Fish & Seafood",
                            SvgUrl = "img/food-delivery/icons/fish.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ee98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/05.jpg",
                            Name = "Coffee & Desserts",
                            SvgUrl = "img/food-delivery/icons/coffee.svg"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Discount.Coupon", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlreadyUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            CouponId = new Guid("7d00aab7-183d-4a98-a0b5-43c5513d86d8"),
                            AlreadyUsed = false,
                            Code = "BeNice",
                            Discount = 10m
                        },
                        new
                        {
                            CouponId = new Guid("91d2d4cb-1ab0-49a9-ac8b-16eee7437faa"),
                            AlreadyUsed = false,
                            Code = "Awesome",
                            Discount = 20m
                        },
                        new
                        {
                            CouponId = new Guid("ef5df57b-9e75-44a7-80d3-3fc299894489"),
                            AlreadyUsed = false,
                            Code = "AlmostFree",
                            Discount = 50m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buckets",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Box Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Streetwise",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drnks & Treats",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharing Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wings & Snacks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Burgers & Wraps",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Add-Ons",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubmenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuId");

                    b.HasIndex("SubmenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "21 Pieces of juicy chicken seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "21 Piece Bucket",
                            Price = 365.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1900ed6d-3ece-4f53-911e-78423052f414"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs & spices.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "15 Piece Bucket",
                            Price = 279.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f420393d-7946-41e4-9c3e-0cc671d112df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "9 Piece Bucket",
                            Price = 182.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b4ca9765-59fe-40c0-a242-8bbc2125ba26"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The new Colonel burger, 1 piece of original recipe chicken, regular mash & gravy, chips & a buddy no sugar drink.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Fully Loaded Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c88aa6aa-8b07-4979-bbed-eaee6c18e54c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The Crispy Zinger burger, 1 piece of original recipe chicken, regular mash & gravy, chips & Buddy no sugar.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Zinger Fully Loaded Buddy Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6c4d7edc-4371-4bb9-bbdf-a9c881355e81"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Nuggets, 1 Crunch Burger, 1 Small Chips and a Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Nugget Box Buddy Meal",
                            Price = 79.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5a923609-18c6-4a00-9fe4-330819728c27"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Crunch Burger, 1 Piece of Original Recipe Chicken, 2 Zinger Wings, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "All Star Box Meal Buddy",
                            Price = 94.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("62207c83-d30c-431e-8819-3c6f6f04fbf5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wrapsta, 1 Piece of Original Recipe Chicken, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Wrapsta Box Meal",
                            Price = 84.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("314ce977-2dd5-4294-b8f7-29a129119be8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 1, with a Buddy no sugar free drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 1 Buddy",
                            Price = 52.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("581d5e41-5e11-4d1c-93c1-b46f7d3461ff"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a delicious Crunch Burger an orginal receipe chicken piece with small chips and a buddy no sugar drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Crunch Burger Box Buddy",
                            Price = 71.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5e711f3f-c1e1-490a-a62c-662eab333c19"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 5, with 2 Buddy No Sugar",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 5 Buddy",
                            Price = 143.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e955eef7-45a1-4229-96d0-7a0c878230c7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 Pieces of Original Recipe chicken cooked to golden perfection and a large portion of chips or coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Five",
                            Price = 121.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("10656d7b-7351-478e-97da-17324529f270"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of original recipe chicken, a portion of small chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Chips",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("18594e74-2f80-451f-a7d3-e49b7578b041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of Original Recipe Chicken with a portion of pap and gravy",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Pap",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b6bf78ad-16e3-4620-98fe-bebe0ed6a464"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of Original Recipe Chicken and Small Chips or Coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Chips",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d61fc6b2-a489-41db-82a9-8889609f665c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a piece of original recipe chicken, 2 zinger wings and a small scrumptious chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Bucket For One",
                            Price = 46.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8afba11d-5691-40ac-a4b4-545e18219c41"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of original recipe chicken cooked to golden perfection and a regular portion of pap & small gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Pap",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("85d85556-bcd0-4e41-94e4-da0d4bb5482b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Cappy Juice 1.5 Litre",
                            Price = 44.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d90cc874-99bc-47e4-94aa-1f81ea3676e3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Oreo bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Oreo Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fab48296-2492-40a3-8745-1f09bff014e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Berry bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Verry Berry Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0762e28f-a805-43ea-bdc1-9accd796358c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Milk shake milk shake shake shake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Strawberry Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0b0e8c1d-be8a-4fcd-90d8-557220881eee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chocolate Milkshake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Chocolate Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("79a072a8-40ba-4c87-a287-14d7985471f7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke 1.5 Litre Bottle",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke 1.5 Litre Bottle",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("08a6e7fe-fc56-4d95-9ab5-0f0df9cfe907"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar 1.5 Litre",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar 1.5 Litre",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("836070bb-5ed8-4d8f-95a3-f77ba8bb368e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar Buddy 440ml",
                            Price = 22.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fa9244da-0e79-4bc6-92e8-c1f3e565b7c9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coca-Cola Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coca-Cola Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0bf81a06-00e5-4cd5-877d-f0c9eeea2098"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fanta Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Fanta Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e4f8d1ae-a6b2-41e1-9ab6-46eb4a917066"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sprite Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Sprite Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("aeeeaaa3-4997-4542-b6d4-906f616bf7c8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bonaqua Still Spring Water 500ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Bonaqua Still Spring Water 500ml",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d204ae83-57e6-4445-b29e-cf2be89f7e9c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "10 Piece Family Treat",
                            Price = 316.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("597440be-3ae4-4eb6-a82f-e4e88e02fc08"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "8 Piece Family Treat",
                            Price = 274.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c7e60369-42af-4b8b-b295-6d90f8a2a498"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("30b28404-8885-4161-809a-30db29aa1884"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 6 pieces of delicious original recipe chicken, 1 large chips, 1 regular coleslaw plus 2 regular mash and gravies.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "All In One Feast",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a65bf463-db7e-4c76-b11d-007012c2774c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 4 pieces of original recipe chicken, 2 small chips, 1 small pops & 2 buddy no sugar drinks.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "2 Can Dine Buddy",
                            Price = 164.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("68e7407e-179f-41d6-a0ac-775782e2242a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy KFC`s new Jalapeno loaded fries with brand new Hot * spicy sauce",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Jalapeno Loaded Fries",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8e4ccb88-80ce-4321-b4b5-3a5b1489f1eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("21c4218f-ffa0-439f-aadd-8d6c8e18fba3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Dunked Wings",
                            Price = 104.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("55dd04e0-db58-41e9-8fd2-d9a3eeced9c3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Hot Zinger Wings",
                            Price = 89.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e9c20947-1be4-41cb-9701-478929e338d4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken, tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Large Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0da003c2-74fd-4c4d-8ad2-efa1758a8c46"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside. Served with a generous sprinkle of fruit chutney flavour.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Sprinkle Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f014c50d-c974-446f-9586-f1a5865f2e3c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Dunked Wings",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("551aa278-cdab-4cfd-9252-a9139ec6eaa0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Zinger Wings",
                            Price = 48.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9262dc17-3a40-435c-a5f3-0920e7a7c8d1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "9Pc Nuggets",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("98107651-27a2-4f95-a1e9-3ba97227d345"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken dunked in KFC’s famous honey, ginger and soy sauce!",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Dunked Pops",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3cf5e5eb-556d-4b96-bd5f-2adc49902a5b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "6Pc Nuggets",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("898912a6-1753-4331-9237-54391f5f6680"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Small Pops",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("168da933-8b0b-4f42-9f4e-13ae44465f8a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5e324633-4696-48c9-95ea-dea4d2b7761a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Colonel burger, Our trademark real chicken fillet; A fresh Brioche bun, Creamy Colonel sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Colonel Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1efc034c-2d71-4de4-b255-7aade5a526e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Crispy Zinger burger, Our trademark real chicken fillet; A fresh Brioche bun, New Hot & Spicy sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Zinger Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b665086c-2ede-4ed7-9453-259a4b76d19b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new standard in burgers! 2 Spicy, crunchy mini fillets with 2 cheese slices, lettuce & tomato covered in tangy dressing on a burger bun",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Double Crunch Burger",
                            Price = 68.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8298d2c8-8a9e-40e2-9e34-3c668da617b2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet zinger recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Zinger Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("484f3b20-dbb7-4d82-b470-88888d129d54"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet original recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Colonel Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d88d81ca-5174-48b9-8b1d-f84823f8b745"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy chicken strips, shredded crisp lettuce, sliced tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Classic Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("89164180-b22a-4933-9d81-e9375eb289b5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy new and improved chicken strips, shredded crisp lettuce, sliced tomato, topped with Colonel dressing and sweet chilli sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Sweet Chilli Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0e112b9f-7399-4197-9c54-feba00d0bb40"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The game changer is here, and with a delicious spicy crunch fillet, tomato, lettuce and cheese with tangy dressing all wrapped up in a mini tortilla and grilled to perfection, meal time will never be the same again.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Wrapsta",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e1245069-1191-4ee0-abfa-fec7428ab9c6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A spicy, crunchy mini fillet with a slice of cheese and lettuce, covered in tangy dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Crunch Burger",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1995d344-7cd9-4948-9ca4-483de0ad89ec"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a0c64b84-a4bf-4c7d-ace1-8e8c96fdd4af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Extra Hot & Spicy Zinger sauce on the side",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Sauce - Hot & Spicy",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("77d203db-edf7-4d2d-a6e7-04e1a11c0528"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Chips",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("8ab4e6d5-b8f0-4fa6-a983-3e6522658574"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Chips",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e1893673-37d6-454d-bb5b-0ab168cacbb1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 Piece Chicken",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "1 Piece Chicken",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("76c29502-bd64-4290-8f37-8af12e56b89d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Mash & Gravy",
                            Price = 27.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fc31a2f5-5748-4c52-9cbf-bad4e0f59309"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of freshly prepared cabbage, onions and carrots in a delicious dressing",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Coleslaw",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3131778b-8be2-4847-a82d-284ce50f6c38"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Mash & Gravy",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b9391c03-a391-438c-8e04-b96605be36c5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Small Chips",
                            Price = 16.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1b6ea131-676c-46ab-98d7-11ac4b4e8a3f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oven baked, fresh mini loaf",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Mini Loaf",
                            Price = 14.90m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "KFC",
                            Tags = "Chicken, Chicken Wings, Burgers, Wraps, Fast Food, Dessert, American, Spicy, Light Meals, Juice, Halaal, Breakfast,"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken Licken",
                            Tags = "Chicken, Burgers, Chicken Wings, Spicy, Light Meals, Salad, Fast Food, Lunch, Dinner, Fries, Fried"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nandos",
                            Tags = "Chicken, Burgers, Chicken Wings, Fast Food, Light Meals, Portuguese, Salad, Spicy, Dessert, South African, Dinner, Chips, Juice, Middle Eastern"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-e5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roman's Pizza",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, American, Dinner"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-f5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Debonair's Pizza",
                            Tags = "Pizza, Fast Food, Italian, Chicken Wings, Dessert, Vegetarian, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-b4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "McDonald's",
                            Tags = "Burgers, Fries, Fast Food, American, Breakfast, Dessert, Salad, Chicken, Juice, Halaal, Lunch, Dinner, Cafe, Coffee, Milkshake, Wraps"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-c4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steers",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-d4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fishaways",
                            Tags = "Fish, Seafood, Fast Food, Halaal, Chips, Lunch, Dinner, Salad, Dessert, Juice, Healthy, Light Meals, Seafood, Grilled, Sushi, Mediterranean, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-e4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kung Fu Chicken",
                            Tags = "Chicken, Fast Food, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-f4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Galito's",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("1313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Doppio Zero",
                            Tags = "Italian, Vegan, Vegetarian, Pizza, Pasta, Burgers, Grill, Tapas, Woodfired, Healthy, Salad, Bakery, Breakfast, Calamari, Seafood, Chicken, Wraps, Poke, Mediterranean, Sandwiches, Dessert, Coffee, Health Drinks, Kids, Milkshake, Chips, Fruit"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mochachos",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian, Grill, Lunch, Dinner, Mexican, Burrito, Prego, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Simply Asia",
                            Tags = "Asian, Thai, Chinese, Japanese, Noodles, Sushi, Soup, Fried, Spicy, Healthy, Low Carb, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy, Traditional"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-2837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Andiccio24",
                            Tags = "Pizza, Pasta, Salad, Soup, Healthy, Smoothies, Dessert, Milkshake, Homemade, Oven Baked, Italian, Ice Cream, Contemporary, Wheat and Gluten free, Vegan, Mediterranean"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-3837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro's Chicken",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-4837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza Perfect",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, Light Meals, Dinner, Chicken Wings, Kids, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-5837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pron",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-6837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "The Fussy Vegan",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-8837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza Baby",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tei Avon",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "X&O",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hao Ke Lai",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Momo Baohaus",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "La Padrino",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Asian Twist",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thunder Gun",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d1-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chop Stix",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-173a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mike's Heritage House",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-273a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spiceburg Greenside",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-373a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Miyako Sushi",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Curry Up",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-573a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Topo Gigio",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-673a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Satori",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-773a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pizza e Vino",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-873a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jimmy's",
                            Tags = ""
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-973a-a4d5-a5571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pasta Worx",
                            Tags = ""
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.Property<Guid>("BasketLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketLineId");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Property<Guid>("SubmenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("Submenus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Submenu", null)
                        .WithMany("menuItems")
                        .HasForeignKey("SubmenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.ShoppingCart.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Navigation("menuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
