// <auto-generated />
using System;
using Gaolos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gaolos.Persistence.Migrations
{
    [DbContext(typeof(GaolosDbContext))]
    [Migration("20240603214127_OrderSummary")]
    partial class OrderSummary
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SvgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dda"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/10.jpg",
                            Name = "Haute Cuisine",
                            SvgUrl = "img/food-delivery/icons/cuisine.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/02.jpg",
                            Name = "Noodles",
                            SvgUrl = "img/food-delivery/icons/noodles.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b44e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Pizza & Pasta",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Burgers & Fries",
                            SvgUrl = "img/food-delivery/icons/burger.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ae98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/08.jpeg",
                            Name = "Grills & Steak",
                            SvgUrl = "img/food-delivery/icons/steak.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/07.jpg",
                            Name = "Chicken & Wings",
                            SvgUrl = "img/food-delivery/icons/chicken.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ce98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/06.jpg",
                            Name = "Healthy food",
                            SvgUrl = "img/food-delivery/icons/healthy.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("de98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/09.jpg",
                            Name = "Fish & Seafood",
                            SvgUrl = "img/food-delivery/icons/fish.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ee98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/05.jpg",
                            Name = "Coffee & Desserts",
                            SvgUrl = "img/food-delivery/icons/coffee.svg"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Discount.Coupon", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlreadyUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            CouponId = new Guid("b9da42cb-e4d8-4da1-ba06-75ca16711d92"),
                            AlreadyUsed = false,
                            Code = "BeNice",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 10m
                        },
                        new
                        {
                            CouponId = new Guid("b0082bbc-1cb9-4ea5-84c3-cd07dfc5dd26"),
                            AlreadyUsed = false,
                            Code = "Awesome",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 20m
                        },
                        new
                        {
                            CouponId = new Guid("f0a34a0d-b687-4f8c-8b40-329e36a8f8e9"),
                            AlreadyUsed = false,
                            Code = "AlmostFree",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 50m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you want more for everyone",
                            Name = "Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When the craving's got you",
                            Name = " Just Hotwings",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need some soul food",
                            Name = "Soulicious",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When a sister needs some soul",
                            Name = "Soul Sister Specials",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you just can't resist",
                            Name = "Just Chicken",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When it's almost mahala",
                            Name = "Easy Bucks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're in the mood for a burger",
                            Name = "Just Chick'n Burgers",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're hungry at heart",
                            Name = "Top Deluxe",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need nuggets to feed your soul",
                            Name = "Soul Bites",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need a little snack",
                            Name = "Original Slyders",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Platters",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buckets",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Box Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Streetwise",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drnks & Treats",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharing Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wings & Snacks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Burgers & Wraps",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Add-Ons",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubmenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuId");

                    b.HasIndex("SubmenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = new Guid("84cf0618-1c14-4c1d-acfe-48f673585521"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal",
                            Price = 73.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d78a8636-5e80-4820-8cde-f83aa46cc4d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal Max",
                            Price = 76.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("bc54758a-6487-40e0-8815-561b12e8b2f5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal",
                            Price = 86.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("437a5513-4139-44fc-bccf-41b37dca5dea"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal Max",
                            Price = 90.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e6022ef7-a506-438e-bed5-2db05833d986"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "6 Hotwings",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("4b5cd767-8f21-4bf9-93f4-c840ba0e73f6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "12 Hotwings",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("cdcb7d22-c218-497c-a7e2-29e6085aa449"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "24 Hotwings",
                            Price = 168.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("958217ed-f437-4877-b10e-ffc1228ccbae"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "36 Hotwings",
                            Price = 231.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b7e46666-9831-4181-abac-1aaf22a9e546"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Square Meal",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("8f9c441c-5ee5-4420-9abb-a89a8014af28"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Soul",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("31c47bab-f713-48e5-a043-40b9ba2d9fc2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Straight",
                            Price = 57.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("00d2e678-d6da-45a8-9fb9-1a8b28d4888e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Combo",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ff07a54d-c0e8-4c0c-ab4e-24d78ef8b187"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/15_hotwings-circle6ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Deluxe",
                            Price = 67.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("40d69b13-2048-4cec-bae2-88fa84976a76"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/16_hotwings-circle6ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Max",
                            Price = 69.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("228bd58f-eadb-4e64-b98f-7d3671241db7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/18_feed-my-craving-circle10ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Feed My Craving",
                            Price = 79.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ba00213b-c060-4128-a0f7-a3f4e215ceb4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/22_soulman-load-up.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soulman Load Up",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("deb09230-d613-45a8-bf3e-66b4fc453ed0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/21_rock-my-soul-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul",
                            Price = 105.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("6f919fb3-d6f9-4caf-803f-5b32c9e49233"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/17_hotwings-party-circle16ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Party",
                            Price = 132.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("4d6aa6c6-b5f2-4ef3-9fdb-e4131cb29d49"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/24_family-full-house-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 143.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("992a641d-a42c-45b5-8930-f5ebbc5103cc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/23_soul-mates-classic-party.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Mates Classic Party",
                            Price = 145.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a5d4b31a-ddcc-496f-8c7b-bee3ef6bd0d6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/25_family-full-house-circle8ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 173.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("04ec9cc2-9dc1-4f49-b058-1cc11c9b58fe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/129_soulsister-2-vibe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Vibe",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a40e2b1f-535e-4c80-87b6-18c515a06dfd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/49_soulsister-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister",
                            Price = 43.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("85bf078b-2c26-4db3-8cb3-320dbb673ff5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/50_soulsister-circle2ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Deluxe",
                            Price = 62.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("39ac9746-2fe7-47d8-9cb8-7acf473969cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/51_soulsister-circle2ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Max",
                            Price = 65.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("07b46e0c-db2a-4399-abec-3db720a2f882"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/52_soulsister-party-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1211ce0f-7a87-497a-9bd1-3e72069ad683"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/53_soulsister-party-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 112.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("8b2f2a6b-3290-4117-bf01-5f7f86a993ae"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/54_just-circle1ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 1",
                            Price = 20.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7a8e5e5a-d378-478d-b365-a968e1cc01ba"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/55_just-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 2",
                            Price = 39.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("9e67b8f6-0937-4568-a234-a18aedc5371e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/56_just-circle3ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 3",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("98c9e5f8-0b80-4419-bc42-a4f8d45505cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/57_just-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 4",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1cae9102-e680-4e31-8a52-1262d60d92cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/58_just-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 5",
                            Price = 99.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f1a31ed7-0ee2-44cc-8488-c45570d8432b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/59_just-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 6",
                            Price = 120.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("cd326290-da54-4172-afc8-d8f3db53e8d8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/60_chicken-inn-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Chicken Inn",
                            Price = 150.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("405423ac-7b89-4ee6-a3aa-5b0ffefee51e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/61_family-bucket-circle15ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Bucket",
                            Price = 230.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("127c70a9-d3b2-430b-bb11-8627c82d1c5b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/62_family-barrel-circle21ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Barrel",
                            Price = 300.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e27be3dc-b167-4aa3-99be-36f1b119afd3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/44_slyder-snack-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Slyder Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("68a532d0-e33e-4f94-9542-006fcc3309e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/45_popcorn-chicken-shaker.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Popcorn Chicken Shaker",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("470d4c8d-c1ff-4995-9a87-2b8e7b957db6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/46_hotwings-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Hotwings Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("044bbffb-b57a-491a-97ca-9afc7f1ea16d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/47_soul-mix-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Mix Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("751b7a00-f9e4-4635-8b60-de0aff9e0a4b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/125_soulbites-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Bites Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("cc8a4b10-cd24-4562-a594-274b295e0cf6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/7_love-me-tender-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5ee5f033-97a3-4fbd-a32a-d9b399d9e881"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/10_love-me-hot-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("0993ce3b-da63-4f74-badc-35452d4f3ac7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/9_love-me-tender-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("74f7941e-814b-4fc9-a480-435840dc72d4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/12_love-me-hot-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("64260ad6-c960-4d22-b95e-d20a3cb08e33"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/13_big-john-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Big John",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d7278691-fffd-4c4c-b791-bd906936682c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/29_love-me-tender-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("49b117b9-6f37-475f-8e6a-d71bb3987baf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/31_love-me-hot-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("56de3bb3-a65e-441f-8383-8aa31d512f56"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/28_big-john-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Big John",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("a605a6e1-d217-4eb7-a2e7-378d5bc64a8c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/30_love-me-tender-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("090cc3df-a60b-4203-abf0-79694f1deed6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/32_love-me-hot-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("9a35ac95-b550-473f-b2e9-56148e2fb1ea"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/123_soulbites-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites",
                            Price = 38.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("42a953c5-4eda-4198-a2f5-9b897446ce5a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/124_soulbites-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites Max",
                            Price = 45.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("34db9c35-af36-4ca0-841e-f9690279297e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/33_1-slyder-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ead90e21-7ad7-4f58-a057-4632197401d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/39_1-slyder-chilli.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("8ad7189c-9d04-4862-8f18-614913bfe33e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/36_1-slyder-cheese.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder",
                            Price = 16.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f50a532b-166c-4e2b-9742-8b89eb4edfb6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/34_2-slyders-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "2 Slyders",
                            Price = 27.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("32fbedda-4445-4391-ba0e-ad78ee3127c6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A generous sharing platter of 4 succulent Flame-grilled Shisanyama Chicken Sosaties and 20 Winglets, served with 2 portions of our Sharing Wedges, 2 Garlic Rolls and our special PERinase dip.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/3d93a55d-440a-407c-8b7b-97cc1e6c510a",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Cabo Sosatie Snack Platter",
                            Price = 349.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2506138d-72c9-404c-ace2-33c9aedc7209"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Half Platter",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/f93c9cbe-5f94-4bb4-a937-811c28bd88df",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Big on veg platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ba8ad172-b528-47db-9230-f59e07e72718"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pulled Chicken Wraps (cut into 6), 3 Chicken Wraps (cut into 6), 2 Sharing Wedges, 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/ccc05d6a-734b-4fec-bbc7-50a7da7ad2da",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Hands-on delicious platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f9dc4eb8-295c-4ef3-aed6-6ccb1704a04e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "One and a 1/2 full chickens ( cut into 12), 2 Flame-grilled Mielies cut into 3 (6 portions), 4 Kids Burgers, 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/5182f543-741a-4317-a731-e8098a228c37",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "More to share platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2d315bc6-8426-4427-a544-c95961a2dce3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Two full chickens (cut into 16), 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions), 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/fa60cb07-3c21-4718-8f02-cb91fd83319b",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Peri-er Platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("32f25071-aeeb-4da6-bd1d-fd2a67977a2e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Veg Burgers, 2 Halloumi & Roast Veg Wraps, 2 Halloumi & Roast Veg Pitas, 2 Sharing Wedges, 4 Flame-grilled Mielies cut into 3 (12 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/3b7bc5aa-eb6c-4f3b-a289-ae9669f410dd",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Veggie veggie nice platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "21 Pieces of juicy chicken seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "21 Piece Bucket",
                            Price = 365.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("19d1a5cc-f9bd-46cc-aa54-600be0fb7e13"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs & spices.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "15 Piece Bucket",
                            Price = 279.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("cc768f89-83fa-468d-aa0b-cb3396bf482b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "9 Piece Bucket",
                            Price = 182.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e21c437a-7ce2-4e4f-86ee-bf591444852b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The new Colonel burger, 1 piece of original recipe chicken, regular mash & gravy, chips & a buddy no sugar drink.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Fully Loaded Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dba18c09-5b24-4378-98da-a6f5a677b3fc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The Crispy Zinger burger, 1 piece of original recipe chicken, regular mash & gravy, chips & Buddy no sugar.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Zinger Fully Loaded Buddy Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1df22795-d8f4-4a90-90f2-cfd41225b1a1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Nuggets, 1 Crunch Burger, 1 Small Chips and a Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Nugget Box Buddy Meal",
                            Price = 79.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("327a5c34-d3f9-4d6e-a882-7d90c76025e1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Crunch Burger, 1 Piece of Original Recipe Chicken, 2 Zinger Wings, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "All Star Box Meal Buddy",
                            Price = 94.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c03e8a9b-d69a-4948-a5a9-9c65d0898257"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wrapsta, 1 Piece of Original Recipe Chicken, Small Chips & Buddy Drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Wrapsta Box Meal",
                            Price = 84.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("163cab99-01d6-46b5-a8d2-b12fdf1195f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 1, with a Buddy no sugar free drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 1 Buddy",
                            Price = 52.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2cdea746-5038-42cb-b9e9-02a0c6e95dfa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a delicious Crunch Burger an orginal receipe chicken piece with small chips and a buddy no sugar drink",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Crunch Burger Box Buddy",
                            Price = 71.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("da03b1a4-ece8-4042-8323-3f5ff37108f6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 5, with 2 Buddy No Sugar",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 5 Buddy",
                            Price = 143.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("4da8918a-1b0d-4d12-8e48-661491095288"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 Pieces of Original Recipe chicken cooked to golden perfection and a large portion of chips or coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Five",
                            Price = 121.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0ef1839c-bfd5-4984-b58e-7223cdebd11d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of original recipe chicken, a portion of small chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Chips",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e595162b-7763-4d61-9313-2b1bd783e495"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of Original Recipe Chicken with a portion of pap and gravy",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Pap",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1adbeb05-c01f-4633-8240-6f963e715e82"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of Original Recipe Chicken and Small Chips or Coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Chips",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c7e1a3e2-3f6b-449e-b0a9-0ff62d38fabf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a piece of original recipe chicken, 2 zinger wings and a small scrumptious chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Bucket For One",
                            Price = 46.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e2d2a645-7945-4f6c-a9de-57018436138a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of original recipe chicken cooked to golden perfection and a regular portion of pap & small gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Pap",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f61af45f-e746-4400-abda-70e50d7914d0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Cappy Juice 1.5 Litre",
                            Price = 44.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7b8c9784-1f37-4962-abcf-702b0cae9ae2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Oreo bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Oreo Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8e13081a-36fb-4123-8473-ea9f5a724fb8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Berry bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Verry Berry Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("4698a7c9-dcbd-43bc-a5bc-1f5219f64075"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Milk shake milk shake shake shake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Strawberry Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("98063063-0919-4c45-b41f-b510ba9ca474"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chocolate Milkshake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Chocolate Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("76690a47-deec-468f-93c3-5f14c165a98f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke 1.5 Litre Bottle",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke 1.5 Litre Bottle",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9a9e5a85-898b-4c83-8ad0-212953657199"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar 1.5 Litre",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar 1.5 Litre",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3655a092-4a2e-4ca8-99d6-e28d0beaf321"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar Buddy 440ml",
                            Price = 22.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("babbe0d0-cb1f-4860-b111-0dd8b19ad08b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coca-Cola Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coca-Cola Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dadd06a7-9404-4c77-a003-abf8b6702731"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fanta Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Fanta Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0c5a2585-9f00-41ad-a209-dba00d40f52e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sprite Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Sprite Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("65344d9e-19aa-4001-a64d-f23de69f5044"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bonaqua Still Spring Water 500ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Bonaqua Still Spring Water 500ml",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5528220f-0232-4c37-90c2-1dedbe790128"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "10 Piece Family Treat",
                            Price = 316.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("719cdacc-13da-4dcb-86e6-7e5801e09385"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "8 Piece Family Treat",
                            Price = 274.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0f007d9d-e5c1-4e59-b48e-a4fa383640c6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("99a6a26c-3e62-490b-98ae-bac259593c66"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 6 pieces of delicious original recipe chicken, 1 large chips, 1 regular coleslaw plus 2 regular mash and gravies.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "All In One Feast",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0e541591-97e0-41ee-945d-a2623c13107d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 4 pieces of original recipe chicken, 2 small chips, 1 small pops & 2 buddy no sugar drinks.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "2 Can Dine Buddy",
                            Price = 164.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("82675bd7-0c3d-4ac7-b5db-829499349394"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy KFC`s new Jalapeno loaded fries with brand new Hot * spicy sauce",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Jalapeno Loaded Fries",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("bde156bb-b00f-42d0-a357-b88f97d6bf97"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c1f4c0e4-c33c-4367-bd58-e97ce81d7286"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Dunked Wings",
                            Price = 104.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8bca23e4-8b14-49b8-93ae-cc3df88dc44a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Hot Zinger Wings",
                            Price = 89.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3a701e32-0760-47b7-a117-8ad74a279ab3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken, tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Large Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3dde5cf0-2529-4459-99c7-bc6b3c520564"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside. Served with a generous sprinkle of fruit chutney flavour.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Sprinkle Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5c3b9bac-c8f9-4761-a63f-7127236198c1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Dunked Wings",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2776131b-aaa2-4308-9a34-8d8e014603e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Zinger Wings",
                            Price = 48.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("743b68e3-dfb8-474f-aa60-9cc63dc6071b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "9Pc Nuggets",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("eaa614b5-ed3c-414c-8f1f-87fc4dc6cce9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken dunked in KFC’s famous honey, ginger and soy sauce!",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Dunked Pops",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("ce8711b5-8da2-433f-ad12-e682709c0bb6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "6Pc Nuggets",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a5f37c4a-a858-4475-b084-be4c39db1c16"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Small Pops",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("cb03e8ed-4d15-4358-8bfd-bb5e9375f1f6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("305eebe4-8ec2-4a73-b594-395d88139200"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Colonel burger, Our trademark real chicken fillet; A fresh Brioche bun, Creamy Colonel sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Colonel Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e7e05513-5f7e-4eea-bd5e-6dc1a5401318"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Crispy Zinger burger, Our trademark real chicken fillet; A fresh Brioche bun, New Hot & Spicy sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Zinger Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8d4427b2-0221-4974-a74d-8f66672e851b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new standard in burgers! 2 Spicy, crunchy mini fillets with 2 cheese slices, lettuce & tomato covered in tangy dressing on a burger bun",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Double Crunch Burger",
                            Price = 68.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e2e8733e-90c2-435b-8a0e-d7f6712749e8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet zinger recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Zinger Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("97ff6912-8b5c-4bb6-bb23-ba763fc05a68"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet original recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Colonel Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("75959c7d-1b79-4690-a3a2-9f07fffd2f03"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy chicken strips, shredded crisp lettuce, sliced tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Classic Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("01bc5d82-1bbc-4109-827f-4e159fc63c29"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy new and improved chicken strips, shredded crisp lettuce, sliced tomato, topped with Colonel dressing and sweet chilli sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Sweet Chilli Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c74ad7d4-06c7-441f-935d-56c69fadcb58"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The game changer is here, and with a delicious spicy crunch fillet, tomato, lettuce and cheese with tangy dressing all wrapped up in a mini tortilla and grilled to perfection, meal time will never be the same again.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Wrapsta",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("d991823b-384a-480a-bcd9-6b093e5ae040"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A spicy, crunchy mini fillet with a slice of cheese and lettuce, covered in tangy dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Crunch Burger",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7c3adfd7-09f8-4420-8bf9-087c496dae08"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6273fbba-cc38-42d6-b60b-b2f244398712"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Extra Hot & Spicy Zinger sauce on the side",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Sauce - Hot & Spicy",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("090e1343-4eb7-48c8-85d7-fc2f001b180e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Chips",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("0ce1c1c0-0c21-4de9-87b5-821c2505ee1e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Chips",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("5512a62c-7e23-49e3-9929-965a62d52427"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 Piece Chicken",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "1 Piece Chicken",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0aaf14c1-2f39-4e3f-a713-b59d91a86d5b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Mash & Gravy",
                            Price = 27.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a61f873f-d51c-4583-ae60-bace0dd13c01"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of freshly prepared cabbage, onions and carrots in a delicious dressing",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Coleslaw",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b442bc14-7350-4de1-aab1-789fe8299ee1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Mash & Gravy",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("71c0efae-3fe9-4119-b226-c7f4aa0fc6e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Small Chips",
                            Price = 16.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("17a21d7c-57f2-4c2f-ae82-f43e8438a610"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oven baked, fresh mini loaf",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Mini Loaf",
                            Price = 14.90m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardExpiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvvCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Delivery")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.Property<Guid>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/02.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/04.png",
                            Name = "KFC",
                            Tags = "Chicken, Chicken Wings, Burgers, Wraps, Fast Food, Dessert, American, Spicy, Light Meals, Juice, Halaal, Breakfast,"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/10.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/14.png",
                            Name = "Chicken Licken",
                            Tags = "Chicken, Burgers, Chicken Wings, Spicy, Light Meals, Salad, Fast Food, Lunch, Dinner, Fries, Fried"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/11.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/15.png",
                            Name = "Nandos",
                            Tags = "Chicken, Burgers, Chicken Wings, Fast Food, Light Meals, Portuguese, Salad, Spicy, Dessert, South African, Dinner, Chips, Juice, Middle Eastern"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-e5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/12.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/16.png",
                            Name = "Roman's Pizza",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, American, Dinner"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-f5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/13.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/17.png",
                            Name = "Debonair's Pizza",
                            Tags = "Pizza, Fast Food, Italian, Chicken Wings, Dessert, Vegetarian, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-b4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/01.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/01.png",
                            Name = "McDonald's",
                            Tags = "Burgers, Fries, Fast Food, American, Breakfast, Dessert, Salad, Chicken, Juice, Halaal, Lunch, Dinner, Cafe, Coffee, Milkshake, Wraps"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-c4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/14.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/18.png",
                            Name = "Steers",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-d4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/15.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/19.png",
                            Name = "Fishaways",
                            Tags = "Fish, Seafood, Fast Food, Halaal, Chips, Lunch, Dinner, Salad, Dessert, Juice, Healthy, Light Meals, Seafood, Grilled, Sushi, Mediterranean, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-e4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/16.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/20.png",
                            Name = "Kung Fu Chicken",
                            Tags = "Chicken, Fast Food, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-f4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/17.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/21.png",
                            Name = "Galito's",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("1313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/18.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/22.png",
                            Name = "Doppio Zero",
                            Tags = "Italian, Vegan, Vegetarian, Pizza, Pasta, Burgers, Grill, Tapas, Woodfired, Healthy, Salad, Bakery, Breakfast, Calamari, Seafood, Chicken, Wraps, Poke, Mediterranean, Sandwiches, Dessert, Coffee, Health Drinks, Kids, Milkshake, Chips, Fruit, Haute"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/19.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/23.png",
                            Name = "Mochachos",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian, Grill, Lunch, Dinner, Mexican, Burrito, Prego, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/20.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/24.png",
                            Name = "Simply Asia",
                            Tags = "Asian, Thai, Chinese, Japanese, Noodles, Sushi, Soup, Fried, Spicy, Healthy, Low Carb, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy, Traditional"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-2837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/21.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/25.png",
                            Name = "Andiccio24",
                            Tags = "Pizza, Pasta, Salad, Soup, Healthy, Smoothies, Dessert, Milkshake, Homemade, Oven Baked, Italian, Ice Cream, Contemporary, Wheat and Gluten free, Vegan, Mediterranean"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-3837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/22.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/26.png",
                            Name = "Pedro's Chicken",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-4837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/23.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/27.png",
                            Name = "Pizza Perfect",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, Light Meals, Dinner, Chicken Wings, Kids, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-5837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/24.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/28.png",
                            Name = "Pron",
                            Tags = "Chinese, Asian, Fried, Healthy, Tapas, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-6837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/25.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/29.png",
                            Name = "The Fussy Vegan",
                            Tags = "Breakfast, Burgers, Burrito, Dessert, Healthy, Sandwiches, Plant-Based, Health Drinks, Health, Vegan"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-8837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/26.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/30.png",
                            Name = "Pizza Baby",
                            Tags = "Pasta, Pizza, Salad, Italian, Fast Food, Dessert, Healthy, Chicken, Non-Alcoholic, Vegetarian"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.Property<Guid>("BasketLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketLineId");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Property<Guid>("SubmenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("Submenus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.CreditCard", b =>
                {
                    b.Property<Guid>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("CreditCardId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.DeliveryAddress", b =>
                {
                    b.Property<Guid>("DeliveryAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("DeliveryAddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Submenu", null)
                        .WithMany("menuItems")
                        .HasForeignKey("SubmenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.ShoppingCart.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Navigation("menuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
