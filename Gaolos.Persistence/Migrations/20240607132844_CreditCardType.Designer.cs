// <auto-generated />
using System;
using Gaolos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gaolos.Persistence.Migrations
{
    [DbContext(typeof(GaolosDbContext))]
    [Migration("20240607132844_CreditCardType")]
    partial class CreditCardType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SvgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dda"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/10.jpg",
                            Name = "Haute Cuisine",
                            SvgUrl = "img/food-delivery/icons/cuisine.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/02.jpg",
                            Name = "Noodles",
                            SvgUrl = "img/food-delivery/icons/noodles.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b44e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/04.jpg",
                            Name = "Pizza & Pasta",
                            SvgUrl = "img/food-delivery/icons/pizza.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/01.jpg",
                            Name = "Burgers & Fries",
                            SvgUrl = "img/food-delivery/icons/burger.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ae98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/08.jpeg",
                            Name = "Grills & Steak",
                            SvgUrl = "img/food-delivery/icons/steak.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/07.jpg",
                            Name = "Chicken & Wings",
                            SvgUrl = "img/food-delivery/icons/chicken.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ce98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/06.jpg",
                            Name = "Healthy food",
                            SvgUrl = "img/food-delivery/icons/healthy.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("de98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/09.jpg",
                            Name = "Fish & Seafood",
                            SvgUrl = "img/food-delivery/icons/fish.svg"
                        },
                        new
                        {
                            CategoryId = new Guid("ee98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/category/05.jpg",
                            Name = "Coffee & Desserts",
                            SvgUrl = "img/food-delivery/icons/coffee.svg"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Discount.Coupon", b =>
                {
                    b.Property<Guid>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlreadyUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            CouponId = new Guid("dc96d52c-39ba-423a-accf-4ec69c373322"),
                            AlreadyUsed = false,
                            Code = "BeNice",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 10m
                        },
                        new
                        {
                            CouponId = new Guid("e37733b8-a7ca-4661-889e-3cd63992dd21"),
                            AlreadyUsed = false,
                            Code = "Awesome",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 20m
                        },
                        new
                        {
                            CouponId = new Guid("4c443946-fc3f-496d-9b33-8f0842f093c4"),
                            AlreadyUsed = false,
                            Code = "AlmostFree",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 50m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you want more for everyone",
                            Name = "Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When the craving's got you",
                            Name = " Just Hotwings",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need some soul food",
                            Name = "Soulicious",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When a sister needs some soul",
                            Name = "Soul Sister Specials",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you just can't resist",
                            Name = "Just Chicken",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When it's almost mahala",
                            Name = "Easy Bucks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're in the mood for a burger",
                            Name = "Just Chick'n Burgers",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you're hungry at heart",
                            Name = "Top Deluxe",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need nuggets to feed your soul",
                            Name = "Soul Bites",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "When you need a little snack",
                            Name = "Original Slyders",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Platters",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buckets",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Box Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Streetwise",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drnks & Treats",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sharing Meals",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wings & Snacks",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Burgers & Wraps",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        },
                        new
                        {
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            CategoryId = new Guid("be98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Add-Ons",
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6")
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubmenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuId");

                    b.HasIndex("SubmenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = new Guid("68db50b1-4b5c-4876-a2b9-143b3ede2371"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces + toast + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/63_lunch-meal.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal",
                            Price = 73.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("3f7cc375-e488-4cdb-97ea-d8ea6d0a2488"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces + toast + 440ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/64_lunch-meal-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Lunch Meal Max",
                            Price = 76.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b14c8b66-08fa-49d1-bede-d6b59ca491cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8 Hotwings + toast + 440ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/65_hotwings-meal-circle8ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal",
                            Price = 86.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("18408312-50af-42d9-b19d-500665f40b96"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8 Hotwings + toast + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/66_hotwings-meal-max-circle8ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "Hotwings Meal Max",
                            Price = 90.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("67e76ffb-1893-4a04-a45e-0eede7887306"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 Hotwings",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/98_hotwings-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "6 Hotwings",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("390aa0f4-fe4d-4a7c-af45-023fed3ed3e1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "12 Hotwings",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/3_hotwings-circle12ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "12 Hotwings",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5c9ca2e8-ae76-4c4e-a5c3-a1bf88b5531d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Hotwings",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/4_hotwings-circle24ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "24 Hotwings",
                            Price = 168.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7d23b426-1129-4bba-a464-4a0d2c383192"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "36 Hotwings",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/5_hotwings-circle36ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "36 Hotwings",
                            Price = 231.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5d0655af-9cec-41bb-aa9b-b03830d84e7c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 Piece + 4 Hotwing®s + 1 Licken Loaf",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/128_soul-square-meal-.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Square Meal",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f443eb77-d5fe-4470-a781-61e6beee8626"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 Hotwings® + a portion of Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/14_hotwings-soul-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Soul",
                            Price = 50.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("79df2d6a-f0e2-4663-bfdf-d2a97bad5358"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 pieces SoulFire® chicken + 1 sachet SoulFire® sauce",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/19_rock-my-soul-circle3cew-straight.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Straight",
                            Price = 57.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("12bf0d15-d60f-43b5-80da-4714d9a708c7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 pieces SoulFire® chicken + a portion of Soul Fries™\r\n\r\n+ 1 sachet SoulFire® sauce ",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/20_rock-my-soul-circle3ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul 3 Combo",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d19e3e1a-9108-4a18-8c44-1573194f71d5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 Hotwings® + a portion of Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/15_hotwings-circle6ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Deluxe",
                            Price = 67.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c22299bc-bf82-4659-a629-cd06bb4804bc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 Hotwings® + a portion of Soul Fries™ + 440ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/16_hotwings-circle6ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Max",
                            Price = 69.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("cd2af4f8-082e-4279-93ee-7bebd72b961e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 Hotwings® + a portion of Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/18_feed-my-craving-circle10ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Feed My Craving",
                            Price = 79.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c0c0bffb-6cc8-40ea-a458-09b270be8e9c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Love Me Tender® Burger + a regular Soul Fries™\r\n\r\n+ 2 Hotwings® + 440ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/22_soulman-load-up.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soulman Load Up",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c630f380-9d00-4988-a3e1-dbb600d55d75"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces SoulFire® chicken + 1 regular Soul Fries™\r\n\r\n+ 2 sachets SoulFire® sauce",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/21_rock-my-soul-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Rock My Soul",
                            Price = 105.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("12ed0879-f325-4dab-aca6-96174b9593f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "16 Hotwings® + 2 regular Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/17_hotwings-party-circle16ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Hotwings Party",
                            Price = 132.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e469ccc1-1534-4e19-9c70-61e055258f18"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces + 2 regular Soul Fries™\r\n\r\n+ 2 regular Soulslaw® / Achaar / Tomato Salsa\r\n\r\n+ 2 Licken Loafs®",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/24_family-full-house-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 143.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("3f9327ce-16d8-49ec-add4-53957d25f541"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "12 Hotwings® + 4 Sliders®\r\n\r\n+ 2 regular Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/23_soul-mates-classic-party.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Soul Mates Classic Party",
                            Price = 145.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("899c482c-985f-4994-b03d-50976c29dc5a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8 pieces + 2 regular Soul Fries™\r\n\r\n+ 2 regular Soulslaw® / Achaar / Tomato Salsa\r\n\r\n+ 2 Licken Loafs®",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/25_family-full-house-circle8ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Family Full House",
                            Price = 173.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e0fd0986-8c4d-4f41-aa5a-cbf88e56931f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces + a Licken Loaf",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/129_soulsister-2-vibe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Vibe",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("41b9c483-b7f1-4ce6-9e96-7c10c65142ee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces + a portion of Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/49_soulsister-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister",
                            Price = 43.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("5630a76e-5b20-49c2-b84a-342ab7a5000f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces + a portion of Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/50_soulsister-circle2ce-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Deluxe",
                            Price = 62.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("1408b088-38db-45b9-9b5d-f3ebe2f5e6e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces + a portion of Soul Fries™ + 440ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/51_soulsister-circle2ce-max.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Max",
                            Price = 65.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b396eba1-0a54-4e8b-9068-dbc2e61e0bf4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 pieces + a portion of Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/52_soulsister-party-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 84.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f63811ce-1fad-40ba-829f-9a7a3a47e93e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 pieces + a portion of Soul Fries™ + 440ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/53_soulsister-party-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Soul Sister Party",
                            Price = 112.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f2efc18e-b019-4aa8-8542-10e117b5f8d6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 piece",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/54_just-circle1ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 1",
                            Price = 20.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2dc35cc7-61eb-4475-935a-41c136cf3ee0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/55_just-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 2",
                            Price = 39.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("980a1d2f-a335-4082-be78-94b2a02bfd01"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/56_just-circle3ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 3",
                            Price = 60.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2b4159c7-5548-443f-9003-d57ccc0c9aad"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/57_just-circle4ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 4",
                            Price = 80.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("8ad0141e-81e9-4c8e-9717-c5e84a1b6c76"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/58_just-circle5ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 5",
                            Price = 99.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("45baf261-04af-48b9-ba11-22ed1cfb8fee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/59_just-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Just 6",
                            Price = 120.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b502d711-c5bf-484f-8f06-533e9d01c225"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/60_chicken-inn-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Chicken Inn",
                            Price = 150.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b6169911-1ce5-4203-8210-086d7c7ee622"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/61_family-bucket-circle15ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Bucket",
                            Price = 230.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("281a9538-ad9e-490b-8b31-9eaa6f0d94e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "21 pieces",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/62_family-barrel-circle21ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "Family Barrel",
                            Price = 300.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("75a65d41-b3dc-47c1-aa51-33c6ea239351"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Original Slyders® + a portion of Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/44_slyder-snack-circle2ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Slyder Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("02b46a69-6c15-4be5-adf7-c73fb9d15593"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Popcorn Chicken® in a shaker cup\r\n\r\n+ 2 sachets SoulFire® sauce or\r\n\r\n2 sachets of Uncle Jessup’s® Ketchup\r\n\r\nto shake up the taste!",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/45_popcorn-chicken-shaker.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Popcorn Chicken Shaker",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("57f59609-0d83-4eff-bef9-2b2eecaae949"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Hotwings® + a portion of Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/46_hotwings-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Hotwings Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("097cee4e-e270-4209-a12b-cc35ecbe3d65"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Hotwings® + a Slider®\r\n\r\n+ a portion of Soul Fries™",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/47_soul-mix-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Mix Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("4f5d1d03-fddf-41dd-92e8-ebab36cf9743"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 SoulBites® + a portion of Soul Fries™ + a sachet of either \r\n\r\nUncle Jessups Ketchup®, SoulFire® sauce or Soulfirennaise™  sauce",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/125_soulbites-snack.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Soul Bites Snack",
                            Price = 30.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("18700d8d-5c1a-4416-8774-f9267b575145"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chicken fillet + lettuce + tomato\r\n\r\n+ Dreamy Creamy® sauce on a toasted sesame bun",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/7_love-me-tender-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("131b3cf7-e50a-489a-9054-e38a06fc094d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chicken fillet + lettuce + tomato\r\n\r\n+ Soulfirenaise™ sauce on a toasted sesame bun",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/10_love-me-hot-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot",
                            Price = 37.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("f70387cc-ce9d-4497-8165-2291aad2165e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chicken fillet + lettuce + tomato\r\n\r\n+ Dreamy Creamy® sauce + a slice of cheese\r\n\r\non a toasted sesame bun",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/9_love-me-tender-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Tender Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("c82cdd0f-4b73-4918-bffd-cc323ae77cee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chicken fillet + lettuce + tomato\r\n\r\n+ Soulfirenaise™ sauce + a slice of cheese\r\n\r\non a toasted sesame bun",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/12_love-me-hot-cheese-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Love Me Hot Cheese Burger",
                            Price = 40.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("82fc650b-2f31-4582-a085-1c9f5c43aa32"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Chicken Bresteaks® + lettuce + a slice of cheese\r\n\r\n+ 3 pickles + Dreamy Creamy® sauce\r\n\r\non a toasted sesame bun",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/13_big-john-burger.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Big John",
                            Price = 42.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("54c67513-c1be-4647-b4b0-78fedac3b5f9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Includes a regular Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/29_love-me-tender-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender Top Deluxe",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ad56b23d-8bb1-4adc-8da9-69b8c36215ac"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Includes a regular Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/31_love-me-hot-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot Top Deluxe",
                            Price = 70.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("fc018130-a259-467b-8222-03a48369c098"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Includes a regular Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/28_big-john-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Big John Top Deluxe",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("e9992fe3-789c-4b3e-822c-3ca8985b0b2d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Includes a regular Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/30_love-me-tender-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Tender Cheese Top Deluxe",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("892914f3-156d-464a-a883-6693b0fe68b8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Includes a regular Soul Fries™ + 300ml Coke",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/32_love-me-hot-cheese-top-deluxe.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Love Me Hot Cheese Top Deluxe",
                            Price = 72.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("675d338d-55f5-4a9f-904b-da21467e0f68"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 SoulBites®",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/123_soulbites-circle6ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites",
                            Price = 38.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("fb69746c-1f05-451b-ae20-a7128103df41"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 SoulBites®",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/124_soulbites-circle9ce.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a9"),
                            Name = "Soul Bites Max",
                            Price = 45.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("81ea2e81-f1a0-4b7d-b375-3923f16cec21"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Square chick’n burger on a toasted square bun with DREAMY CREAMY® sauce and a pickle",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/33_1-slyder-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder Original",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("19914077-dd28-4da9-8a65-a1583c2aae6e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Square chick’n burger on a toasted square bun with SOULFIRENAISE™ sauce and a pickle",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/39_1-slyder-chilli.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Slyder Chilli",
                            Price = 14.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("7376e04f-05e4-4c29-b717-8e28a3960e6a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "  Square chick’n burger on a toasted square bun with DREAMY CREAMY® sauce and a pickle and cheese",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/36_1-slyder-cheese.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "1 Cheese Slyder",
                            Price = 16.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("bbef6f9b-c753-4c51-8d16-0821248a5f14"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Square chick’n burgers on toasted square buns with DREAMY CREAMY® sauce and a pickle",
                            ImageUrl = "https://chickenlicken.co.za/assets/uploads/products/menu/34_2-slyders-original.png",
                            MenuId = new Guid("2014179f-1037-173a-a4d5-a6571b43e6a0"),
                            Name = "2 Original Slyders",
                            Price = 27.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("07a3e508-2839-4812-a5a9-556020b00adc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A generous sharing platter of 4 succulent Flame-grilled Shisanyama Chicken Sosaties and 20 Winglets, served with 2 portions of our Sharing Wedges, 2 Garlic Rolls and our special PERinase dip.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/3d93a55d-440a-407c-8b7b-97cc1e6c510a",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Cabo Sosatie Snack Platter",
                            Price = 349.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("d2e7f5b8-381c-49b2-af4e-db88f6c0cce6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Half Platter",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/f93c9cbe-5f94-4bb4-a937-811c28bd88df",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Big on veg platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("fc54fa74-b72b-418d-a597-f0945d8a3fd5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pulled Chicken Wraps (cut into 6), 3 Chicken Wraps (cut into 6), 2 Sharing Wedges, 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x212//MW_IMAGES/ccc05d6a-734b-4fec-bbc7-50a7da7ad2da",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Hands-on delicious platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("dbed62e6-a367-4d0d-b411-e7cfec3a5fa9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "One and a 1/2 full chickens ( cut into 12), 2 Flame-grilled Mielies cut into 3 (6 portions), 4 Kids Burgers, 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/5182f543-741a-4317-a731-e8098a228c37",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "More to share platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("b77971f4-4415-4045-8685-58a22a031e48"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Two full chickens (cut into 16), 16 Winglets, 2 Flame-grilled Mielies cut into 3 (6 portions), 2 Sharing Wedges. Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/fa60cb07-3c21-4718-8f02-cb91fd83319b",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Peri-er Platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("ef70362e-8ab1-490c-ac92-56b7dd322f57"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Veg Burgers, 2 Halloumi & Roast Veg Wraps, 2 Halloumi & Roast Veg Pitas, 2 Sharing Wedges, 4 Flame-grilled Mielies cut into 3 (12 portions). Includes 1 PERinaise dip and 1 Creamy dip. All platters serve 6-8 people.",
                            ImageUrl = "https://imagesrv.nandos.co.za/179x215//MW_IMAGES/3b7bc5aa-eb6c-4f3b-a289-ae9669f410dd",
                            MenuId = new Guid("2013179f-1117-173a-a4d5-a6571b43e6a1"),
                            Name = "Veggie veggie nice platter",
                            Price = 640.00m
                        },
                        new
                        {
                            MenuItemId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "21 Pieces of juicy chicken seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/6eaDUybzXwyTZS51VNINU3/ed40587af0f56e4f8b753f4352a02f09/66752_-_E-Commerce_21_pc_Bucket_1200x900.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "21 Piece Bucket",
                            Price = 365.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("aad678aa-e085-4a88-801a-5dfb41ca25f0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "15 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs & spices.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/WKTb7n2vvpdYR1v8mvXX0/4d01e6a6cf892c116f2e82bdd4b64b6a/66752_-_E-Commerce_15_pc_Bucket_1200x900.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "15 Piece Bucket",
                            Price = 279.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6992fbc6-3d13-4d54-a3b7-3bee4c41b7b0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 Pieces of juicy Original Recipe chicken, seasoned with the 11 secret herbs and spices of Original Recipe® chicken, marinated and cooked to perfection.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/2ZE6o3XzzI7YzGsVVT4ubY/e95c55d0c1b050b91a2b070a5ad1b32e/9_piece_bucket.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a1"),
                            Name = "9 Piece Bucket",
                            Price = 182.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("cc4ee0ac-b005-4325-adf5-e20396d90a67"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The new Colonel burger, 1 piece of original recipe chicken, regular mash & gravy, chips & a buddy no sugar drink.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/31yPC9ryh5KT1pOdwEOOzG/d1e2df6fc99eaf513f84b63f7d475f58/65129_kfc_-_FLBM_cheese_buddy_1200x900.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Fully Loaded Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("858a7fb0-c271-408c-9200-a196f727d463"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new Burger standard…Boxed! The Crispy Zinger burger, 1 piece of original recipe chicken, regular mash & gravy, chips & Buddy no sugar.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/3spYrESfEqEyv4TaIwhQnZ/e315445416a59f4ba60acf90090482dd/62279_WickedZinger_SF_-_1200x900.png?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Zinger Fully Loaded Buddy Box Meal",
                            Price = 115.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("70a9e5be-2d3d-4868-b342-0ec5d336dcbe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Nuggets, 1 Crunch Burger, 1 Small Chips and a Buddy Drink",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/1L5C3sZ1MmaHtuQLewHqYa/5e4ecba1d83ade38d554eba1a7431551/ABC2120-nugget_box_buddy_1.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Nugget Box Buddy Meal",
                            Price = 79.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a0c4ae4e-641d-4c1a-9b90-3e93410224eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Crunch Burger, 1 Piece of Original Recipe Chicken, 2 Zinger Wings, Small Chips & Buddy Drink",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/2tpR61h0KxupmA8U024fwu/55f538f6ae4384b9bbdf598435d6ea53/ABC1696-all_star_box_buddy.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "All Star Box Meal Buddy",
                            Price = 94.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2da1ce3e-de08-4090-9a5c-c8c491aadcf9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wrapsta, 1 Piece of Original Recipe Chicken, Small Chips & Buddy Drink",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/2snvT5LNlzizE6TGQ9KN4F/3f5c8ebf26502ad1bdf5a1cc456ccfc0/ABC1723-wrapsta_box_buddy.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a2"),
                            Name = "Wrapsta Box Meal",
                            Price = 84.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6393a244-19b6-40d0-8866-dd4ad472f763"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 1, with a Buddy no sugar free drink",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/3QpxFh5qLJj5GT8dEMW3iZ/3acbea341f4c8d3162163373ff8ed48f/COM2029-streetwise_bucket_for_1.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 1 Buddy",
                            Price = 52.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a80b53af-9ecf-451f-b6ac-14a8310a98ed"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a delicious Crunch Burger an orginal receipe chicken piece with small chips and a buddy no sugar drink",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/3QpxFh5qLJj5GT8dEMW3iZ/3acbea341f4c8d3162163373ff8ed48f/COM2029-streetwise_bucket_for_1.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Crunch Burger Box Buddy",
                            Price = 71.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b8f3e942-e021-4e04-9e42-d4ff5233a0a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get yourself a Streetwise 5, with 2 Buddy No Sugar",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/2uwM3hjbse4hzaZv6d5peO/576343077547dc714bf02883a79589f6/ICM1009-streetwise_5_chips.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "SW Bozza Streetwise 5 Buddy",
                            Price = 143.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c50b4949-9587-4708-afa2-7327afee1314"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "5 Pieces of Original Recipe chicken cooked to golden perfection and a large portion of chips or coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Five",
                            Price = 121.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3eed9b88-d7da-4323-9953-87dc67e333a0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of original recipe chicken, a portion of small chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Chips",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1cde5fd8-3cc6-4589-8219-b720155adf5d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3 Pieces of Original Recipe Chicken with a portion of pap and gravy",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Three with Pap",
                            Price = 72.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("e81503ef-c519-467f-a136-318a6929477b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of Original Recipe Chicken and Small Chips or Coleslaw.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Chips",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f1d5ca1f-a1fd-43a5-b972-ef1e5892436b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy a piece of original recipe chicken, 2 zinger wings and a small scrumptious chips.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Bucket For One",
                            Price = 46.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f249f588-ff92-426e-b55e-7542835778f5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 Pieces of original recipe chicken cooked to golden perfection and a regular portion of pap & small gravy.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a3"),
                            Name = "Streetwise Two with Pap",
                            Price = 49.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("196770d9-ea1f-48d6-969a-cf6dd924750e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Cappy Juice 1.5 Litre",
                            Price = 44.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2658a62d-bd01-45d6-8e5a-d935c16bb71f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Oreo bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Oreo Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6019305f-d2a4-4536-bb98-59bc1393b7d4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An icy sippable treat with Berry bitz, and creamy soft-serve.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Verry Berry Krusher",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("2d71bb56-6271-4484-a726-9aced02f3d28"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Milk shake milk shake shake shake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Strawberry Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("96005e52-4bc9-47b7-900d-d6af13d9cf6e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chocolate Milkshake",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Chocolate Milkshake",
                            Price = 31.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dbe030b4-8e98-4292-b760-55e4d9631bb7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke 1.5 Litre Bottle",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke 1.5 Litre Bottle",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("682eaa70-b5a8-4bc2-8de6-cd889e0ab1df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar 1.5 Litre",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar 1.5 Litre",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("ee104487-3384-4fbe-83f4-facac4d61c00"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coke No Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coke No Sugar Buddy 440ml",
                            Price = 22.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("fd6f6af3-42fc-4ffe-b59e-48f862167153"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coca-Cola Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Coca-Cola Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("6a455856-1d91-4bcf-8df5-8c63380f854a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fanta Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Fanta Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7763e725-b972-466c-9140-54a9e66a3340"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sprite Sugar Buddy 440ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Sprite Sugar Buddy 440ml",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9c1e2559-1f02-45cb-86e4-3c50d0b3048c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bonaqua Still Spring Water 500ml",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a4"),
                            Name = "Bonaqua Still Spring Water 500ml",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("90a87681-96d4-4e2c-9f5e-0a2776747697"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "10 Piece Family Treat",
                            Price = 316.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("08d46c65-ebd0-4605-9ce8-9966621be009"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "8pc Chicken, 2 snack burgers, 4 Zinger Wings, 2 Reg Coleslaw, 2 Reg chips",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "8 Piece Family Treat",
                            Price = 274.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b40d4228-b8e0-43fb-ba8d-6e052fa6dea2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b7aa2aac-6b78-48a5-9948-0a8e9fa0a22f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 6 pieces of delicious original recipe chicken, 1 large chips, 1 regular coleslaw plus 2 regular mash and gravies.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "All In One Feast",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("11d10b13-f205-4d90-9c8d-b818e407a4c2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy 4 pieces of original recipe chicken, 2 small chips, 1 small pops & 2 buddy no sugar drinks.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a5"),
                            Name = "2 Can Dine Buddy",
                            Price = 164.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("f170187e-9238-4322-b2ab-95172f5be129"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoy KFC`s new Jalapeno loaded fries with brand new Hot * spicy sauce",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Jalapeno Loaded Fries",
                            Price = 32.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("8905e68c-dbcb-4471-b48e-c151dfe7e1cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "24 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "24 Zinger Wings Bucket",
                            Price = 194.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("af721f73-e253-4b45-b47f-774334ea58f5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Dunked Wings",
                            Price = 104.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("da498738-5dec-43e7-87d4-6dbb7d7eed54"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "10 Hot Zinger Wings",
                            Price = 89.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("3d654476-fe16-44d3-84e8-4116a6e8c801"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken, tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Large Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("28f9d8cb-f2ac-435b-b756-45dee8f3ac3a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside. Served with a generous sprinkle of fruit chutney flavour.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Sprinkle Pops",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("79daac80-c98f-4e94-ab5f-6c1a23da653b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 KFC famous Zinger Wings dunked in a delicious honey, ginger and soy sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Dunked Wings",
                            Price = 54.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("96beea54-dafd-4591-8a7c-b73379564264"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 Succulent winglets breaded in our hot Zinger breading to give you the delicious hot flavour you love, cooked to crispy-brown perfection.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "4 Zinger Wings",
                            Price = 48.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dbd1ef4f-9912-44aa-9531-cc00c57cd9ec"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "9 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "9Pc Nuggets",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("1562ba5b-4033-4189-8e59-d99ac55236ae"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken dunked in KFC’s famous honey, ginger and soy sauce!",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Dunked Pops",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7283ad18-5617-4119-ab3e-2d7fd7ef83a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "6 pieces of crispy, delicious golden brown Nuggets, paired with 1 delicious Colonel dipping sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "6Pc Nuggets",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("bf2d4a08-637a-47d9-94b3-497f0dd60dcb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bite-sized pieces of chicken that are tender on the inside and crunchy on the outside.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Small Pops",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("97d54c28-6fe7-49bb-920d-05f73d9067b0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a6"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dc02bc2a-72e6-4264-9ff6-2fd2c7475294"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Colonel burger, Our trademark real chicken fillet; A fresh Brioche bun, Creamy Colonel sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Colonel Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("0113de90-946b-4e3c-87d4-f969e32b752b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Try the new standard! The New Crispy Zinger burger, Our trademark real chicken fillet; A fresh Brioche bun, New Hot & Spicy sauce and cheese on a fresh bed of lettuce & succulent tomatoes",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Zinger Burger",
                            Price = 60.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("c67081a1-5343-4bcd-a981-673f36fede2e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The new standard in burgers! 2 Spicy, crunchy mini fillets with 2 cheese slices, lettuce & tomato covered in tangy dressing on a burger bun",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "New Double Crunch Burger",
                            Price = 68.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("34c4cfa4-ffdd-4c96-a711-9c4080d437e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet zinger recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Zinger Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("9e310146-3730-4d16-9f6d-3b6af370db00"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around a delicious fillet original recipe - a slice of cheese, hash brown, crisp lettuce, fresh tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Colonel Boxmaster",
                            Price = 76.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("60c93b8e-3de0-46df-aa09-475277175406"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy chicken strips, shredded crisp lettuce, sliced tomato and a dash of Colonel dressing.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Classic Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("baf30662-fea4-4e6a-a8fd-79016c4dd805"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A warm tortilla wrapped around 2 deliciously crispy new and improved chicken strips, shredded crisp lettuce, sliced tomato, topped with Colonel dressing and sweet chilli sauce.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Sweet Chilli Twister",
                            Price = 66.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("7d09e97f-750e-4852-aed0-dc0f2f503f59"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The game changer is here, and with a delicious spicy crunch fillet, tomato, lettuce and cheese with tangy dressing all wrapped up in a mini tortilla and grilled to perfection, meal time will never be the same again.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Wrapsta",
                            Price = 42.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("614be771-d47f-4dcc-b66f-1ba32332cc35"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A spicy, crunchy mini fillet with a slice of cheese and lettuce, covered in tangy dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Crunch Burger",
                            Price = 36.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("01ab38f8-0219-4dd3-90f4-51cfa1b9201e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A delicious chicken patty served with shredded lettuce & Colonel dressing on a snack bun.",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a7"),
                            Name = "Snack Burger",
                            Price = 29.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("ac499447-bfd2-49e7-ac1b-7f11288b25d2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Extra Hot & Spicy Zinger sauce on the side",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/bEZLbUGmprwC7wW3i0GsS/73b63ef3ac73d2e805688b74cdbc31c0/Hot_n_Spicy_sauce_-_1200x900.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Sauce - Hot & Spicy",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("780d05c9-705f-43cc-bedd-59cd9d56c01b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/5Zt1jvrey6zim41HKaarJr/6c4e0a08f94a83f04ad98dc130ce67e1/CHI1002-lrg_chips.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Chips",
                            Price = 0m
                        },
                        new
                        {
                            MenuItemId = new Guid("77007bdc-0d7d-43cd-9afd-b6b07b4624ee"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/23emjPvgiS9FE3xT6UiBa/9a5d9ceffa02d18a26679472e7f62cfc/CHI1001-reg_chips.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Chips",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("dea3dce3-dd6c-4683-af89-847100199080"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 Piece Chicken",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/2XhP71I12p5tncjyX1P81w/d94f9543674f4728165031f42dcb2653/ALA1001-1pc_cob.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "1 Piece Chicken",
                            Price = 26.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("82bd776c-9f67-485e-bbe2-fa6972636506"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/16hT15F1AVhciJyE32xbGE/f83f8d8d906a2593420739e995086bc4/MAG1003-reg_mash___gravy.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Large Mash & Gravy",
                            Price = 27.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("b25444cd-5c65-43cf-9b69-1e7bb540d02f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of freshly prepared cabbage, onions and carrots in a delicious dressing",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/1LvCxHqjAFXs2XFgAbQpnG/44719dee762ff4f7106e33d8c4f300f9/ABC2225-reg_coleslaw.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Coleslaw",
                            Price = 24.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("660e2c98-3ea9-41da-81f2-a2080c1164e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of creamy mash and our delicious gravy.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/16hT15F1AVhciJyE32xbGE/f83f8d8d906a2593420739e995086bc4/MAG1003-reg_mash___gravy.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Regular Mash & Gravy",
                            Price = 19.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("06902d94-5188-4298-aa04-a3bb6afa6db5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A portion of chips, crispy on the outside, soft and fluffy on the inside.",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/4J7RauzcyD6KkQu9Qhpp28/da6827d46db9161d26ae26c874be5123/ABC1247-sml_chips.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Small Chips",
                            Price = 16.90m
                        },
                        new
                        {
                            MenuItemId = new Guid("a28efed5-1861-4ce5-b263-c5f2af23f05c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oven baked, fresh mini loaf",
                            ImageUrl = "https://images.ctfassets.net/0p42pznmbeec/2X0ukPSNX6j4kHDE2o2mGa/e910e8f156eb5ca37642fb19944603a0/MIS1001-1_mini_loaf.jpg?h=600&w=800&fm=webp&fit=fill",
                            MenuId = new Guid("2013179f-1037-173a-a4d5-a6571b43e6a8"),
                            Name = "Mini Loaf",
                            Price = 14.90m
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardExpiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvvCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Delivery")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.Property<Guid>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-b5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/02.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/04.png",
                            Name = "KFC",
                            Tags = "Chicken, Chicken Wings, Burgers, Wraps, Fast Food, Dessert, American, Spicy, Light Meals, Juice, Halaal, Breakfast,"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-c5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/10.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/14.png",
                            Name = "Chicken Licken",
                            Tags = "Chicken, Burgers, Chicken Wings, Spicy, Light Meals, Salad, Fast Food, Lunch, Dinner, Fries, Fried"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-d5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/11.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/15.png",
                            Name = "Nandos",
                            Tags = "Chicken, Burgers, Chicken Wings, Fast Food, Light Meals, Portuguese, Salad, Spicy, Dessert, South African, Dinner, Chips, Juice, Middle Eastern"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-e5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/12.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/16.png",
                            Name = "Roman's Pizza",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, American, Dinner"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-a4d5-f5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/13.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/17.png",
                            Name = "Debonair's Pizza",
                            Tags = "Pizza, Fast Food, Italian, Chicken Wings, Dessert, Vegetarian, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-b4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/01.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/01.png",
                            Name = "McDonald's",
                            Tags = "Burgers, Fries, Fast Food, American, Breakfast, Dessert, Salad, Chicken, Juice, Halaal, Lunch, Dinner, Cafe, Coffee, Milkshake, Wraps"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-c4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/14.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/18.png",
                            Name = "Steers",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-d4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/15.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/19.png",
                            Name = "Fishaways",
                            Tags = "Fish, Seafood, Fast Food, Halaal, Chips, Lunch, Dinner, Salad, Dessert, Juice, Healthy, Light Meals, Seafood, Grilled, Sushi, Mediterranean, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-e4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/16.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/20.png",
                            Name = "Kung Fu Chicken",
                            Tags = "Chicken, Fast Food, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("6313179f-7837-473a-f4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/17.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/21.png",
                            Name = "Galito's",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("1313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/18.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/22.png",
                            Name = "Doppio Zero",
                            Tags = "Italian, Vegan, Vegetarian, Pizza, Pasta, Burgers, Grill, Tapas, Woodfired, Healthy, Salad, Bakery, Breakfast, Calamari, Seafood, Chicken, Wraps, Poke, Mediterranean, Sandwiches, Dessert, Coffee, Health Drinks, Kids, Milkshake, Chips, Fruit, Haute"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/19.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/23.png",
                            Name = "Mochachos",
                            Tags = "Burgers, Fries, Salad, Dessert, Chicken, Milkshake, Ribs, Ice Cream, Fast Food, Kids, Healthy, Chips, Vegetarian, Grill, Lunch, Dinner, Mexican, Burrito, Prego, Halaal"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-1837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/20.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/24.png",
                            Name = "Simply Asia",
                            Tags = "Asian, Thai, Chinese, Japanese, Noodles, Sushi, Soup, Fried, Spicy, Healthy, Low Carb, Light Meals, Salad, Lunch, Dinner, Juice, Chinese, Asian, Sushi, Soup, Fried, Japanese, Noodles, Spicy, Traditional"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-2837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/21.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/25.png",
                            Name = "Andiccio24",
                            Tags = "Pizza, Pasta, Salad, Soup, Healthy, Smoothies, Dessert, Milkshake, Homemade, Oven Baked, Italian, Ice Cream, Contemporary, Wheat and Gluten free, Vegan, Mediterranean"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-3837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/22.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/26.png",
                            Name = "Pedro's Chicken",
                            Tags = "Chicken, Spicy, Light Meals, Salad, Lunch, Dinner, Juice, Portuguese, African, Spicy, Halaal, Middle Eastern, Mediterranean, Healthy, Low Carb"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-4837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/23.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/27.png",
                            Name = "Pizza Perfect",
                            Tags = "Pizza, Pasta, Salad, Dessert, Lunch, Fast Food, Spicy, Mediterranean, Light Meals, Dinner, Chicken Wings, Kids, Vegetarian"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-5837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/24.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/28.png",
                            Name = "Pron",
                            Tags = "Chinese, Asian, Fried, Healthy, Tapas, Noodles, Spicy"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-6837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/25.jpeg",
                            LogoUrl = "img/food-delivery/restaurants/logos/29.png",
                            Name = "The Fussy Vegan",
                            Tags = "Breakfast, Burgers, Burrito, Dessert, Healthy, Sandwiches, Plant-Based, Health Drinks, Health, Vegan"
                        },
                        new
                        {
                            RestaurantId = new Guid("2313179f-8837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "img/food-delivery/restaurants/26.jpg",
                            LogoUrl = "img/food-delivery/restaurants/logos/30.png",
                            Name = "Pizza Baby",
                            Tags = "Pasta, Pizza, Salad, Italian, Fast Food, Dessert, Healthy, Chicken, Non-Alcoholic, Vegetarian"
                        });
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.Property<Guid>("BasketLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketLineId");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Property<Guid>("SubmenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("Submenus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.CreditCard", b =>
                {
                    b.Property<Guid>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("CreditCardId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.UserAccount.DeliveryAddress", b =>
                {
                    b.Property<Guid>("DeliveryAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("bit");

                    b.HasKey("DeliveryAddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Submenu", null)
                        .WithMany("menuItems")
                        .HasForeignKey("SubmenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.OrderLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Category", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.BasketLine", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.ShoppingCart.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaolos.Domain.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.HasOne("Gaolos.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Category", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.ShoppingCart.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });

            modelBuilder.Entity("Gaolos.Domain.Entities.Submenu", b =>
                {
                    b.Navigation("menuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
